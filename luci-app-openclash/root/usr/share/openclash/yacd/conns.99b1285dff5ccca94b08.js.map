{"version":3,"sources":["webpack:///./src/components/ModalCloseAllConnections.module.css","webpack:///./src/components/shared/Fab.ts","webpack:///./src/hooks/useRemainingViewPortHeight.js","webpack:///./src/components/ConnectionTable.module.css","webpack:///./src/components/ConnectionTable.js","webpack:///./src/components/ModalCloseAllConnections.js","webpack:///./src/components/Connections.js","webpack:///./src/components/Connections.module.css"],"names":["module","exports","position","right","bottom","useState","React","useRef","useCallback","useLayoutEffect","useRemainingViewPortHeight","ref","containerHeight","setContainerHeight","updateContainerHeight","top","current","getBoundingClientRect","window","innerHeight","addEventListener","removeEventListener","sortDescFirst","columns","accessor","show","Header","tableState","sortBy","id","desc","hiddenColumns","Table","data","useTable","initialState","autoResetSortBy","useSortBy","getTableProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","className","s","tr","headers","column","getHeaderProps","getSortByToggleProps","th","render","sortIconContainer","isSorted","isSortedDesc","rotate180","size","row","i","cells","cell","j","getCellProps","cx","td","odd","du","formatDistance","value","prettyBytes","renderCell","useMemo","Comp","isOpen","onRequestClose","primaryButtonOnTap","primaryButtonRef","onAfterOpen","focus","base","modalStyle","content","cnt","afterOpen","beforeClose","overlayClassName","overlay","btngrp","Button","onClick","style","width","useEffect","filterConns","conns","keyword","filter","conn","host","sourceIP","sourcePort","destinationIP","chains","rule","type","network","some","field","pat","toLowerCase","includes","renderTableOrPlaceholder","length","ConnectionTable","placeHolder","SvgYacd","height","c1","ConnQty","qty","connect","apiConfig","getClashAPIConfig","refContainer","setConns","closedConns","setClosedConns","filterKeyword","setFilterKeyword","filteredConns","filteredClosedConns","isCloseAllModalOpen","setIsCloseAllModalOpen","openCloseAllModal","closeCloseAllModal","isRefreshPaused","setIsRefreshPaused","toggleIsRefreshPaused","x","closeAllConnections","connAPI","prevConnsRef","read","connections","prevConnsKv","items","o","item","arrayToIdKv","now","Date","c","prevKv","metadata","upload","download","start","destinationPort","ret","reverse","join","source","prev","downloadSpeedCurr","uploadSpeedCurr","formatConnectionDataItem","closed","findIndex","push","slice","ContentHeader","title","display","flexWrap","justifyContent","connQty","inputWrapper","name","autoComplete","input","placeholder","onChange","e","target","padding","paddingBottom","paddingTop","overflow","Fab","icon","mainButtonStyles","background","fabPosition","text"],"mappings":"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","file":"conns.99b1285dff5ccca94b08.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"_2EXTX1C3T7\",\"cnt\":\"_3Or8nP9psK\",\"afterOpen\":\"cMLUu0qS4R\",\"btngrp\":\"_29FK6hdfwZ\"};","import './rtf.css';\n\nimport { Action,Fab } from 'react-tiny-fab';\n\nexport const position = {\n  right: 10,\n  bottom: 10,\n};\n\nexport { Fab, Action };\n","import React from 'react';\n\nconst { useState, useRef, useCallback, useLayoutEffect } = React;\n\n/**\n * cosnt [ref, remainingHeight] = useRemainingViewPortHeight();\n *\n * return a reference, and the remaining height of the referenced dom node\n * to the bottom of the view port\n *\n */\nexport default function useRemainingViewPortHeight() {\n  const ref = useRef(null);\n  const [containerHeight, setContainerHeight] = useState(200);\n  const updateContainerHeight = useCallback(() => {\n    const { top } = ref.current.getBoundingClientRect();\n    setContainerHeight(window.innerHeight - top);\n  }, []);\n\n  useLayoutEffect(() => {\n    updateContainerHeight();\n    window.addEventListener('resize', updateContainerHeight);\n    return () => {\n      window.removeEventListener('resize', updateContainerHeight);\n    };\n  }, [updateContainerHeight]);\n\n  return [ref, containerHeight];\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tr\":\"_1jfIf4GmHx\",\"th\":\"_3lQG38TYko\",\"td\":\"_2jKsqjrYbo\",\"odd\":\"MuvmFG__PV\",\"du\":\"_3ydhc_nkf0\",\"sortIconContainer\":\"_3q0v0OLzZL\",\"rotate180\":\"_1XNg9MalRS\"};","import cx from 'clsx';\nimport { formatDistance } from 'date-fns';\nimport React from 'react';\nimport { ChevronDown } from 'react-feather';\nimport { useSortBy, useTable } from 'react-table';\n\nimport prettyBytes from '../misc/pretty-bytes';\nimport s from './ConnectionTable.module.css';\n\nconst sortDescFirst = true;\n\nconst columns = [\n  { accessor: 'id', show: false },\n  { Header: 'Host', accessor: 'host' },\n  { Header: 'DL', accessor: 'download', sortDescFirst },\n  { Header: 'UL', accessor: 'upload', sortDescFirst },\n  { Header: 'DL Speed', accessor: 'downloadSpeedCurr', sortDescFirst },\n  { Header: 'UL Speed', accessor: 'uploadSpeedCurr', sortDescFirst },\n  { Header: 'Chains', accessor: 'chains' },\n  { Header: 'Rule', accessor: 'rule' },\n  { Header: 'Time', accessor: 'start', sortDescFirst },\n  { Header: 'Source', accessor: 'source' },\n  { Header: 'Destination IP', accessor: 'destinationIP' },\n  { Header: 'Type', accessor: 'type' },\n];\n\nfunction renderCell(cell) {\n  switch (cell.column.id) {\n    case 'start':\n      return formatDistance(cell.value, 0);\n    case 'download':\n    case 'upload':\n      return prettyBytes(cell.value);\n    case 'downloadSpeedCurr':\n    case 'uploadSpeedCurr':\n      return prettyBytes(cell.value) + '/s';\n    default:\n      return cell.value;\n  }\n}\n\nconst sortById = { id: 'id', desc: true };\nconst tableState = {\n  sortBy: [\n    // maintain a more stable order\n    sortById,\n  ],\n  hiddenColumns: ['id'],\n};\n\nfunction Table({ data }) {\n  const { getTableProps, headerGroups, rows, prepareRow } = useTable(\n    {\n      columns,\n      data,\n      initialState: tableState,\n      autoResetSortBy: false,\n    },\n    useSortBy\n  );\n  return (\n    <div {...getTableProps()}>\n      {headerGroups.map((headerGroup) => {\n        return (\n          <div {...headerGroup.getHeaderGroupProps()} className={s.tr}>\n            {headerGroup.headers.map((column) => (\n              <div\n                {...column.getHeaderProps(column.getSortByToggleProps())}\n                className={s.th}\n              >\n                <span>{column.render('Header')}</span>\n                <span className={s.sortIconContainer}>\n                  {column.isSorted ? (\n                    <span className={column.isSortedDesc ? '' : s.rotate180}>\n                      <ChevronDown size={16} />\n                    </span>\n                  ) : null}\n                </span>\n              </div>\n            ))}\n\n            {rows.map((row, i) => {\n              prepareRow(row);\n              return row.cells.map((cell, j) => {\n                return (\n                  <div\n                    {...cell.getCellProps()}\n                    className={cx(\n                      s.td,\n                      i % 2 === 0 ? s.odd : false,\n                      j >= 1 && j <= 4 ? s.du : false\n                    )}\n                  >\n                    {renderCell(cell)}\n                  </div>\n                );\n              });\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Table;\n","import cx from 'clsx';\nimport React from 'react';\nimport Modal from 'react-modal';\n\nimport Button from './Button';\nimport modalStyle from './Modal.module.css';\nimport s from './ModalCloseAllConnections.module.css';\n\nconst { useRef, useCallback, useMemo } = React;\n\nexport default function Comp({ isOpen, onRequestClose, primaryButtonOnTap }) {\n  const primaryButtonRef = useRef(null);\n  const onAfterOpen = useCallback(() => {\n    primaryButtonRef.current.focus();\n  }, []);\n  const className = useMemo(\n    () => ({\n      base: cx(modalStyle.content, s.cnt),\n      afterOpen: s.afterOpen,\n      beforeClose: '',\n    }),\n    []\n  );\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      onAfterOpen={onAfterOpen}\n      className={className}\n      overlayClassName={cx(modalStyle.overlay, s.overlay)}\n    >\n      <p>Are you sure you want to close all connections?</p>\n      <div className={s.btngrp}>\n        <Button onClick={primaryButtonOnTap} ref={primaryButtonRef}>\n          I'm sure\n        </Button>\n        {/* im lazy :) */}\n        <div style={{ width: 20 }} />\n        <Button onClick={onRequestClose}>No</Button>\n      </div>\n    </Modal>\n  );\n}\n","import './Connections.css';\n\nimport React from 'react';\nimport { Pause, Play, X as IconClose } from 'react-feather';\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\n\nimport * as connAPI from '../api/connections';\nimport useRemainingViewPortHeight from '../hooks/useRemainingViewPortHeight';\nimport { getClashAPIConfig } from '../store/app';\nimport s from './Connections.module.css';\nimport ConnectionTable from './ConnectionTable';\nimport ContentHeader from './ContentHeader';\nimport ModalCloseAllConnections from './ModalCloseAllConnections';\nimport { Action, Fab, position as fabPosition } from './shared/Fab';\nimport { connect } from './StateProvider';\nimport SvgYacd from './SvgYacd';\n\nconst { useEffect, useState, useRef, useCallback } = React;\n\nconst paddingBottom = 30;\n\nfunction arrayToIdKv(items) {\n  const o = {};\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    o[item.id] = item;\n  }\n  return o;\n}\n\nfunction filterConns(conns, keyword) {\n  const hasSubstring = (s, pat) => s.toLowerCase().includes(pat.toLowerCase());\n\n  return !keyword\n    ? conns\n    : conns.filter((conn) =>\n        [\n          conn.host,\n          conn.sourceIP,\n          conn.sourcePort,\n          conn.destinationIP,\n          conn.chains,\n          conn.rule,\n          conn.type,\n          conn.network,\n        ].some((field) => hasSubstring(field, keyword))\n      );\n}\n\nfunction formatConnectionDataItem(i, prevKv, now) {\n  const { id, metadata, upload, download, start, chains, rule } = i;\n  // eslint-disable-next-line prefer-const\n  let {\n    host,\n    destinationPort,\n    destinationIP,\n    network,\n    type,\n    sourceIP,\n    sourcePort,\n  } = metadata;\n  // host could be an empty string if it's direct IP connection\n  if (host === '') host = destinationIP;\n\n  const ret = {\n    id,\n    upload,\n    download,\n    start: now - new Date(start),\n    chains: chains.reverse().join(' / '),\n    rule,\n    ...metadata,\n    host: `${host}:${destinationPort}`,\n    type: `${type}(${network})`,\n    source: `${sourceIP}:${sourcePort}`,\n  };\n  const prev = prevKv[id];\n  ret.downloadSpeedCurr = download - (prev ? prev.download : 0);\n  ret.uploadSpeedCurr = upload - (prev ? prev.upload : 0);\n  return ret;\n}\n\nfunction renderTableOrPlaceholder(conns) {\n  return conns.length > 0 ? (\n    <ConnectionTable data={conns} />\n  ) : (\n    <div className={s.placeHolder}>\n      <SvgYacd width={200} height={200} c1=\"var(--color-text)\" />\n    </div>\n  );\n}\n\nfunction ConnQty({ qty }) {\n  return qty < 100 ? '' + qty : '99+';\n}\n\nfunction Conn({ apiConfig }) {\n  const [refContainer, containerHeight] = useRemainingViewPortHeight();\n  const [conns, setConns] = useState([]);\n  const [closedConns, setClosedConns] = useState([]);\n  const [filterKeyword, setFilterKeyword] = useState('');\n  const filteredConns = filterConns(conns, filterKeyword);\n  const filteredClosedConns = filterConns(closedConns, filterKeyword);\n  const [isCloseAllModalOpen, setIsCloseAllModalOpen] = useState(false);\n  const openCloseAllModal = useCallback(() => setIsCloseAllModalOpen(true), []);\n  const closeCloseAllModal = useCallback(\n    () => setIsCloseAllModalOpen(false),\n    []\n  );\n  const [isRefreshPaused, setIsRefreshPaused] = useState(false);\n  const toggleIsRefreshPaused = useCallback(() => {\n    setIsRefreshPaused((x) => !x);\n  }, []);\n  const closeAllConnections = useCallback(() => {\n    connAPI.closeAllConnections(apiConfig);\n    closeCloseAllModal();\n  }, [apiConfig, closeCloseAllModal]);\n  const prevConnsRef = useRef(conns);\n  const read = useCallback(\n    ({ connections }) => {\n      const prevConnsKv = arrayToIdKv(prevConnsRef.current);\n      const now = new Date();\n      const x = connections.map((c) =>\n        formatConnectionDataItem(c, prevConnsKv, now)\n      );\n      const closed = [];\n      for (const c of prevConnsRef.current) {\n        const idx = x.findIndex((conn) => conn.id === c.id);\n        if (idx < 0) closed.push(c);\n      }\n      setClosedConns((prev) => {\n        // keep max 100 entries\n        return [...closed, ...prev].slice(0, 101);\n      });\n      // if previous connections and current connections are both empty\n      // arrays, we wont update state to avaoid rerender\n      if (\n        x &&\n        (x.length !== 0 || prevConnsRef.current.length !== 0) &&\n        !isRefreshPaused\n      ) {\n        prevConnsRef.current = x;\n        setConns(x);\n      } else {\n        prevConnsRef.current = x;\n      }\n    },\n    [setConns, isRefreshPaused]\n  );\n  useEffect(() => {\n    return connAPI.fetchData(apiConfig, read);\n  }, [apiConfig, read]);\n  return (\n    <div>\n      <ContentHeader title=\"Connections\" />\n      <Tabs>\n        <div\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n          }}\n        >\n          <TabList>\n            <Tab>\n              <span>Active</span>\n              <span className={s.connQty}>\n                <ConnQty qty={filteredConns.length} />\n              </span>\n            </Tab>\n            <Tab>\n              <span>Closed</span>\n              <span className={s.connQty}>\n                <ConnQty qty={filteredClosedConns.length} />\n              </span>\n            </Tab>\n          </TabList>\n          <div className={s.inputWrapper}>\n            <input\n              type=\"text\"\n              name=\"filter\"\n              autoComplete=\"off\"\n              className={s.input}\n              placeholder=\"Filter\"\n              onChange={(e) => setFilterKeyword(e.target.value)}\n            />\n          </div>\n        </div>\n        <div\n          ref={refContainer}\n          style={{ padding: 30, paddingBottom, paddingTop: 0 }}\n        >\n          <div\n            style={{\n              height: containerHeight - paddingBottom,\n              overflow: 'auto',\n            }}\n          >\n            <TabPanel>\n              <>{renderTableOrPlaceholder(filteredConns)}</>\n              <Fab\n                icon={\n                  isRefreshPaused ? <Play size={16} /> : <Pause size={16} />\n                }\n                mainButtonStyles={\n                  isRefreshPaused\n                    ? {\n                        background: '#e74c3c',\n                      }\n                    : {}\n                }\n                position={fabPosition}\n                text={isRefreshPaused ? 'Resume Refresh' : 'Pause Refresh'}\n                onClick={toggleIsRefreshPaused}\n              >\n                <Action\n                  text=\"Close All Connections\"\n                  onClick={openCloseAllModal}\n                >\n                  <IconClose size={10} />\n                </Action>\n              </Fab>\n            </TabPanel>\n            <TabPanel>{renderTableOrPlaceholder(filteredClosedConns)}</TabPanel>\n          </div>\n        </div>\n        <ModalCloseAllConnections\n          isOpen={isCloseAllModalOpen}\n          primaryButtonOnTap={closeAllConnections}\n          onRequestClose={closeCloseAllModal}\n        />\n      </Tabs>\n    </div>\n  );\n}\n\nconst mapState = (s) => ({\n  apiConfig: getClashAPIConfig(s),\n});\n\nexport default connect(mapState)(Conn);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeHolder\":\"_1L_OYNGd-Q\",\"connQty\":\"_3KG2Wl3UIL\",\"inputWrapper\":\"_2VBzsdXyrW\",\"input\":\"_3jbpkYalBS\"};"],"sourceRoot":""}