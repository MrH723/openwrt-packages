{"version":3,"sources":["webpack:///./src/components/proxies/ProxyLatency.module.css","webpack:///./src/components/proxies/Proxies.module.css","webpack:///./src/components/proxies/Settings.module.css","webpack:///./src/components/shared/Fab.ts","webpack:///./src/components/shared.module.css","webpack:///./src/hooks/useTextInput.ts","webpack:///./src/components/shared/Styled.module.css","webpack:///./src/components/CollapsibleSectionHeader.module.css","webpack:///./src/components/shared/Select.module.css","webpack:///./src/components/shared/BaseModal.module.css","webpack:///./src/components/proxies/ProxyProvider.module.css","webpack:///./src/components/proxies/ProxyList.module.css","webpack:///./src/components/shared/BaseModal.js","webpack:///./src/components/svg/Equalizer.tsx","webpack:///./src/components/shared/Styled.tsx","webpack:///./src/components/proxies/ClosePrevConns.tsx","webpack:///./src/components/CollapsibleSectionHeader.tsx","webpack:///./src/components/proxies/hooks.tsx","webpack:///./src/misc/keycode.ts","webpack:///./src/components/proxies/ProxyLatency.tsx","webpack:///./src/components/proxies/Proxy.tsx","webpack:///./src/components/proxies/ProxyList.tsx","webpack:///./src/components/proxies/ProxyGroup.tsx","webpack:///./src/components/Collapsible.js","webpack:///./src/components/proxies/ProxyProvider.tsx","webpack:///./src/components/proxies/ProxyProviderList.tsx","webpack:///./src/components/shared/Select.tsx","webpack:///./src/components/proxies/Settings.js","webpack:///./src/components/proxies/TextFilter.tsx","webpack:///./src/components/proxies/Proxies.tsx","webpack:///./src/components/proxies/Proxy.module.css","webpack:///./src/components/proxies/ProxyGroup.module.css"],"names":["module","exports","position","right","bottom","useCallback","React","useState","useMemo","useTextInut","x","useRecoilState","setTextGlobal","text","setText","setTextDebounced","debounce","e","target","value","BaseModal","isOpen","onRequestClose","children","className","base","cx","modalStyle","content","s","cnt","afterOpen","beforeClose","overlayClassName","overlay","Equalizer","color","size","fill","xmlns","viewBox","width","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cy","r","transform","FlexCenter","useRef","useEffect","ClosePrevConns","onClickPrimaryButton","onClickSecondaryButton","primaryButtonRef","secondaryButtonRef","current","focus","onKeyDown","keyCode","style","Button","onClick","ref","Header","name","type","toggle","qty","handleKeyDown","preventDefault","key","header","cursor","tabIndex","role","kind","btn","arrow","getSortDelay","proxyInfo","number","NonProxyTypes","indexOf","ProxySortingFns","Natural","proxies","LatencyAsc","delay","proxyMapping","sort","a","b","LatencyDesc","d1","NameAsc","NameDesc","useFilteredAndSorted","all","hideUnavailableProxies","proxySortBy","proxyFilterText","filterText","filtered","list","filter","undefined","filterAvailableProxies","searchText","segments","toLowerCase","split","map","trim","length","i","seg","filterStrArr","filterAvailableProxiesAndSort","keyCodes","ProxyLatency","s0","proxyLatency","colorMap","getLabelColor","mapState","getProxies","getDelay","proxy","latency","Proxy","connect","now","isSelectable","doSelect","error","selectable","proxyName","row","proxyType","opacity","ProxySmall","getProxyDotBackgroundColor","title","ret","proxySmall","background","ProxyList","itemOnTapCallback","ProxyListSummaryView","listSummaryView","createElement","ZapWrapper","zapWrapper","ProxyGroup","collapsibleIsOpen","getCollapsibleIsOpen","getProxySortBy","getHideUnavailableProxies","group","allItems","apiConfig","dispatch","useStoreActions","updateCollapsibleIsOpen","app","requestDelayForProxies","switchProxy","isTestingLatency","setIsTestingLatency","testLatency","display","alignItems","isLoading","memo","variantsCollpapsibleWrap","initialOpen","transition","duration","open","visibility","closed","variantsCollpapsibleChildContainer","Collapsible","previous","bounds","set","ro","ResizeObserver","entry","contentRect","observe","disconnect","useMeasure","refToMeature","div","animate","custom","variants","button","rest","scale","pressed","rotate","hover","Refresh","refresh","initial","whileHover","whileTap","ProxyProvider","getClashAPIConfig","vehicleType","updatedAt","isHealthcheckLoading","setIsHealthcheckLoading","updateProvider","updateProviderByName","healthcheckProvider","healthcheckProviderByName","timeAgo","formatDistance","Date","body","actionFooter","start","ProxyProviderList","items","ContentHeader","item","Select","options","selected","onChange","select","appConfig","autoCloseOldConns","getAutoCloseOldConns","updateAppConfig","handleProxySortByOnChange","handleHideUnavailablesSwitchOnChange","v","labeledInput","checked","TextFilter","shared","input","ColorZap","spining","justifyContent","groupNames","getProxyGroupNames","proxyProviders","getProxyProviders","showModalClosePrevConns","getShowModalClosePrevConns","refFetchedTimestamp","requestDelayAllFn","requestDelayAll","then","fetchProxiesHooked","startAt","fetchProxies","completeAt","fn","window","addEventListener","removeEventListener","isSettingsModalOpen","setIsSettingsModalOpen","closeSettingsModal","closeModalClosePrevConns","closePrevConnsAndTheModal","topBar","topBarRight","textFilterContainer","groupName","Fab","icon","fabPosition"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,aAAe,gB,uBCAjCD,EAAOC,QAAU,CAAC,OAAS,cAAc,YAAc,cAAc,oBAAsB,cAAc,MAAQ,cAAc,QAAU,cAAc,kBAAoB,gB,uBCA3KD,EAAOC,QAAU,CAAC,aAAe,gB,oCCDjC,oIAIO,IAAMC,EAAW,CACtBC,MAAO,GACPC,OAAQ,K,qBCLVJ,EAAOC,QAAU,CAAC,MAAQ,gB,wHCGlBI,EAAmCC,cAAtBC,EAAsBD,WAAZE,EAAYF,UAEpC,SAASG,EACdC,GAC4D,MAClCC,yBAAeD,GAAhCE,EADmD,sBAEpCL,EAAS,IAF2B,mBAErDM,EAFqD,KAE/CC,EAF+C,KAGtDC,EAAmBP,GAAQ,kBAAMQ,YAASJ,EAAe,OAAM,CACnEA,IASF,MAAO,CAPUP,GACf,SAACY,GACCH,EAAQG,EAAEC,OAAOC,OACjBJ,EAAiBE,EAAEC,OAAOC,SAE5B,CAACJ,IAEeF,K,qBCpBpBb,EAAOC,QAAU,CAAC,WAAa,gB,qBCA/BD,EAAOC,QAAU,CAAC,OAAS,cAAc,MAAQ,cAAc,OAAS,cAAc,IAAM,cAAc,IAAM,gB,4CCAhHD,EAAOC,QAAU,CAAC,OAAS,gB,qBCA3BD,EAAOC,QAAU,CAAC,QAAU,cAAc,IAAM,cAAc,UAAY,gB,qBCA1ED,EAAOC,QAAU,CAAC,UAAY,cAAc,KAAO,cAAc,aAAe,cAAc,QAAU,gB,qBCAxGD,EAAOC,QAAU,CAAC,KAAO,cAAc,gBAAkB,gB,+NCMjDO,EAAYF,UAEL,SAASc,EAAT,GAAyD,IAApCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,SACpDC,EAAYhB,GAChB,iBAAO,CACLiB,KAAMC,YAAGC,IAAWC,QAASC,IAAEC,KAC/BC,UAAWF,IAAEE,UACbC,YAAa,MAEf,IAEF,OACE,gBAAC,IAAD,CACEX,OAAQA,EACRC,eAAgBA,EAChBE,UAAWA,EACXS,iBAAkBP,YAAGC,IAAWO,QAASL,IAAEK,UAE1CX,G,4BClBQ,SAASY,EAAT,GAGL,QAFRC,aAEQ,MAFA,eAEA,MADRC,YACQ,MADD,GACC,EACR,OACE,uBACEC,KAAK,OACLC,MAAM,6BACNC,QAAQ,YACRC,MAAOJ,EACPK,OAAQL,EACRM,OAAQP,EACRQ,YAAY,IACZC,cAAc,QACdC,eAAe,SAEf,wBAAMC,EAAE,qBACR,0BAAQrB,GAAG,KAAKsB,GAAG,IAAIC,EAAE,MACzB,wBAAMF,EAAE,qBACR,0BAAQE,EAAE,IAAIC,UAAU,2B,yBCtBvB,SAASC,EAAT,GAAiE,IAA3C5B,EAA2C,EAA3CA,SAC3B,OAAO,uBAAKC,UAAWK,IAAEsB,YAAa5B,G,ICAhC6B,EAAsB9C,SAAd+C,EAAc/C,YAOvB,SAASgD,EAAT,GAGG,IAFRC,EAEQ,EAFRA,qBACAC,EACQ,EADRA,uBAEMC,EAAmBL,EAA0B,MAC7CM,EAAqBN,EAA0B,MACrDC,GAAU,WACRI,EAAiBE,QAAQC,UACxB,IAUH,OAEE,uBAAKC,UAVe,SAAC5C,GACH,KAAdA,EAAE6C,QACJJ,EAAmBC,QAAQC,QACJ,KAAd3C,EAAE6C,SACXL,EAAiBE,QAAQC,UAOzB,gDACA,6HAIA,uBAAKG,MAAO,CAAErB,OAAQ,MACtB,gBAACS,EAAD,KACE,gBAACa,EAAA,EAAD,CAAQC,QAASV,EAAsBW,IAAKT,GAA5C,OAGA,uBAAKM,MAAO,CAAEtB,MAAO,MACrB,gBAACuB,EAAA,EAAD,CAAQC,QAAST,EAAwBU,IAAKR,GAA9C,Q,mHC5BO,SAASS,EAAT,GAA4D,IAA1CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQjD,EAAsB,EAAtBA,OAAQkD,EAAc,EAAdA,IACrDC,EAAgBlE,eACpB,SAACW,GACCA,EAAEwD,iBACY,UAAVxD,EAAEyD,KAA6B,MAAVzD,EAAEyD,KACzBJ,MAGJ,CAACA,IAEH,OACE,uBACE9C,UAAWK,IAAE8C,OACbV,QAASK,EACTP,MAAO,CAAEa,OAAQ,WACjBC,SAAU,EACVhB,UAAWW,EACXM,KAAK,UAEL,2BACE,gBAAC,IAAD,CAAiBV,KAAMA,EAAMC,KAAMA,KAGrB,iBAARE,EAAmB,wBAAM/C,UAAWK,IAAE0C,KAAMA,GAAc,KAElE,gBAACP,EAAA,EAAD,CAAQe,KAAK,UAAUd,QAASK,EAAQ9C,UAAWK,IAAEmD,KACnD,wBAAMxD,UAAWE,YAAGG,IAAEoD,MAAO,CAAE,CAACpD,IAAER,QAASA,KACzC,gBAAC,IAAD,CAAagB,KAAM,Q,8EC9BrB7B,EAAYF,UAgBpB,IAAM4E,EAAe,SACnBnC,EAKAoC,GAEA,GAAIpC,GAAyB,iBAAbA,EAAEqC,QAAuBrC,EAAEqC,OAAS,EAClD,OAAOrC,EAAEqC,OAGX,IAAMf,EAAOc,GAAaA,EAAUd,KACpC,OAAIA,GAAQgB,IAAcC,QAAQjB,IAAS,GAAW,EAE/C,QAGHkB,EAAkB,CACtBC,QAAS,SAACC,GAAD,OAAuBA,GAChCC,WAAY,SACVD,EACAE,EACAC,GAEA,OAAOH,EAAQI,MAAK,SAACC,EAAGC,GAGtB,OAFWb,EAAaS,EAAMG,GAAIF,GAAgBA,EAAaE,IACpDZ,EAAaS,EAAMI,GAAIH,GAAgBA,EAAaG,QAInEC,YAAa,SACXP,EACAE,EACAC,GAEA,OAAOH,EAAQI,MAAK,SAACC,EAAGC,GACtB,IAAME,EAAKf,EAAaS,EAAMG,GAAIF,GAAgBA,EAAaE,IAE/D,OADWZ,EAAaS,EAAMI,GAAIH,GAAgBA,EAAaG,IACnDE,MAGhBC,QAAS,SAACT,GACR,OAAOA,EAAQI,QAEjBM,SAAU,SAACV,GACT,OAAOA,EAAQI,MAAK,SAACC,EAAGC,GACtB,OAAID,EAAIC,GAAW,EACfD,EAAIC,EAAU,EACX,OA4CN,SAASK,EACdC,EACAV,EACAW,EACAC,EACAd,GACA,MACqB9E,yBAAe6F,KAA7BC,EADP,oBAEA,OAAOjG,GACL,kBA7BJ,SACE6F,EACAV,EACAW,EACAG,EACAF,EACAd,GAGA,IAAIiB,EAAW,YAAIL,GAQnB,OAPIC,IACFI,EAlGJ,SAAgCC,EAAgBhB,GAC9C,OAAOgB,EAAKC,QAAO,SAACxC,GAClB,IAAMrB,EAAI4C,EAAMvB,GAChB,YAAUyC,IAAN9D,GAGa,IAAbA,EAAEqC,UA4FK0B,CAAuBT,EAAKV,IAGf,iBAAfc,GAA0C,KAAfA,IACpCC,EAlCJ,SAAsBL,EAAeU,GACnC,IAAMC,EAAWD,EACdE,cACAC,MAAM,KACNC,KAAI,SAACzG,GAAD,OAAOA,EAAE0G,UACbR,QAAO,SAAClG,GAAD,QAASA,KAEnB,OAAwB,IAApBsG,EAASK,OAAqBhB,EAE3BA,EAAIO,QAAO,SAACxC,GAEjB,IADA,IAAIkD,EAAI,EACDA,EAAIN,EAASK,OAAQC,IAAK,CAC/B,IAAMC,EAAMP,EAASM,GACrB,GAAIlD,EAAK6C,cAAc3B,QAAQiC,IAAQ,EAAG,OAAO,EAEnD,OAAO,KAmBIC,CAAad,EAAUD,IAE7BlB,EAAgBgB,GAAaG,EAAUf,EAAOF,GAajDgC,CACEpB,EACAV,EACAW,EACAG,EACAF,EACAd,KAEJ,CAACY,EAAKV,EAAOW,EAAwBG,EAAYF,EAAad,I,yBC5IrDiC,EAGJ,G,0CCMF,SAASC,EAAT,GAA4D,IAApCvC,EAAoC,EAApCA,OAAQhD,EAA4B,EAA5BA,MACrC,OACE,wBAAMZ,UAAWoG,IAAGC,aAAc9D,MAAO,CAAE3B,UACzC,4BAAOgD,EAAP,Q,ICHE5E,EAAYF,UAEdwH,GAEE,UAFFA,GAII,UAJJA,GAMC,UANDA,GAQA,UAGN,SAASC,KAID,6DAAJ,GAHF3C,EAGM,EAHNA,OAIA,OAAe,IAAXA,EACK0C,GACE1C,EAAS,IACX0C,GACE1C,EAAS,IACX0C,GACoB,iBAAX1C,EACT0C,GAEFA,GA6HT,IAAME,GAAW,SAACnG,EAAD,GAAsB,IAAXuC,EAAW,EAAXA,KACpBqB,EAAUwC,YAAWpG,GACrB8D,EAAQuC,YAASrG,GACvB,MAAO,CACLsG,MAAO1C,EAAQrB,GACfgE,QAASzC,EAAMvB,KAINiE,GAAQC,YAAQN,GAARM,EA1DrB,YAOe,IANbC,EAMa,EANbA,IACAnE,EAKa,EALbA,KACA+D,EAIa,EAJbA,MACAC,EAGa,EAHbA,QACAI,EAEa,EAFbA,aACAvE,EACa,EADbA,QAEM7B,EAAQ5B,GAAQ,kBAAMuH,GAAcK,KAAU,CAACA,IAC/CK,EAAWnI,eAAkB,WACjCkI,GAAgBvE,GAAWA,EAAQG,KAClC,CAACA,EAAMH,EAASuE,IACbhE,EAAgBlE,eACpB,SAACW,GACKA,EAAE6C,UAAY4D,GAChBe,MAGJ,CAACA,IAEGjH,EAAYhB,GAAQ,WACxB,OAAOkB,YAAGkG,IAAGO,MAAO,CAClB,CAACP,IAAGW,KAAMA,EACV,CAACX,IAAGc,OAAQN,GAAWA,EAAQM,MAC/B,CAACd,IAAGe,YAAaH,MAElB,CAACA,EAAcD,EAAKH,IAEvB,OACE,uBACEvD,SAAU,EACVrD,UAAWA,EACXyC,QAASwE,EACT5E,UAAWW,EACXM,KAAM0D,EAAe,WAAa,IAElC,uBAAKhH,UAAWoG,IAAGgB,WAAYxE,GAC/B,uBAAK5C,UAAWoG,IAAGiB,KACjB,wBAAMrH,UAAWoG,IAAGkB,UAAW/E,MAAO,CAAEgF,QAASR,EAAM,GAAM,KAC1DJ,EAAM9D,MAER+D,GAAWA,EAAQhD,OAClB,gBAACuC,EAAD,CAAcvC,OAAQgD,EAAQhD,OAAQhD,MAAOA,IAC3C,UAgBC4G,GAAaV,YAAQN,GAARM,EA/G1B,YAOe,IANbC,EAMa,EANbA,IACAnE,EAKa,EALbA,KACA+D,EAIa,EAJbA,MACAC,EAGa,EAHbA,QACAI,EAEa,EAFbA,aACAvE,EACa,EADbA,QAEM7B,EAAQ5B,GAAQ,kBA7BxB,SACE4H,EAGAU,GAEA,OAAIzD,IAAcC,QAAQwD,IAAc,EAC/B,6HAEFf,GAAcK,GAoBOa,CAA2Bb,EAASD,EAAM9D,QAAO,CAC3E+D,EACAD,IAEIe,EAAQ1I,GAAQ,WACpB,IAAI2I,EAAM/E,EAIV,OAHIgE,GAAqC,iBAAnBA,EAAQhD,SAC5B+D,GAAO,IAAMf,EAAQhD,OAAS,OAEzB+D,IACN,CAAC/E,EAAMgE,IAEJK,EAAWnI,eAAkB,WACjCkI,GAAgBvE,GAAWA,EAAQG,KAClC,CAACA,EAAMH,EAASuE,IAEbhH,EAAYhB,GAAQ,WACxB,OAAOkB,YAAGkG,IAAGwB,WAAY,CACvB,CAACxB,IAAGW,KAAMA,EACV,CAACX,IAAGe,YAAaH,MAElB,CAACA,EAAcD,IAEZ/D,EAAgBlE,eACpB,SAACW,GACKA,EAAE6C,UAAY4D,GAChBe,MAGJ,CAACA,IAGH,OACE,uBACES,MAAOA,EACP1H,UAAWA,EACXuC,MAAO,CAAEsF,WAAYjH,GACrB6B,QAASwE,EACT5E,UAAWW,EACXM,KAAM0D,EAAe,WAAa,Q,wBC9FjC,SAASc,GAAT,GAKY,IAJjBjD,EAIiB,EAJjBA,IACAkC,EAGiB,EAHjBA,IACAC,EAEiB,EAFjBA,aACAe,EACiB,EADjBA,kBAEM9D,EAAUY,EAEhB,OACE,uBAAK7E,UAAWK,KAAE8E,MACflB,EAAQ0B,KAAI,SAACyB,GACZ,OACE,gBAACP,GAAD,CACE3D,IAAKkE,EACL3E,QAASsF,EACTf,aAAcA,EACdpE,KAAMwE,EACNL,IAAKK,IAAcL,QAQxB,SAASiB,GAAT,GAKY,IAJjBnD,EAIiB,EAJjBA,IACAkC,EAGiB,EAHjBA,IACAC,EAEiB,EAFjBA,aACAe,EACiB,EADjBA,kBAEA,OACE,uBAAK/H,UAAWK,KAAE4H,iBACfpD,EAAIc,KAAI,SAACyB,GACR,OACE,gBAACI,GAAD,CACEtE,IAAKkE,EACL3E,QAASsF,EACTf,aAAcA,EACdpE,KAAMwE,EACNL,IAAKK,IAAcL,Q,ICpCvBmB,GAAkDpJ,gBAAnCD,GAAmCC,cAAtBE,GAAsBF,UAAbC,GAAaD,WAE1D,SAASqJ,KACP,OACE,uBAAKnI,UAAWoG,IAAGgC,YACjB,gBAAC,IAAD,CAAKvH,KAAM,MAkFV,IAAMwH,GAAavB,aAAQ,SAACzG,EAAD,GAAwB,IAAlBuC,EAAkB,EAAlBA,KAAMuB,EAAY,EAAZA,MACtCF,EAAUwC,YAAWpG,GACrBiI,EAAoBC,YAAqBlI,GACzC0E,EAAcyD,YAAenI,GAC7ByE,EAAyB2D,YAA0BpI,GAEnDqI,EAAQzE,EAAQrB,GAEtB,MAAO,CACLiC,IAFyB6D,EAAnB7D,IAGNV,QACAW,yBACAC,cACAd,UACApB,KAPyB6F,EAAd7F,KAQXkE,IARyB2B,EAAR3B,IASjBlH,OAAQyI,EAAmB,cAAa1F,MAhBlBkE,EA7E1B,YAYG,IAXDlE,EAWC,EAXDA,KACK+F,EAUJ,EAVD9D,IACAV,EASC,EATDA,MACAW,EAQC,EARDA,uBACAC,EAOC,EAPDA,YACAd,EAMC,EANDA,QACApB,EAKC,EALDA,KACAkE,EAIC,EAJDA,IACAlH,EAGC,EAHDA,OACA+I,EAEC,EAFDA,UACAC,EACC,EADDA,SAEMhE,EAAMD,EACV+D,EACAxE,EACAW,EACAC,EACAd,GAGI+C,EAAehI,IAAQ,iBAAe,aAAT6D,IAAqB,CAACA,IATxD,EAcGiG,cAFKC,EAZR,EAYCC,IAAOD,wBACIE,EAbZ,EAaChF,QAAWgF,uBAGPnG,EAASjE,IAAY,WACzBkK,EAAwB,aAAcnG,GAAO/C,KAC5C,CAACA,EAAQkJ,EAAyBnG,IAE/BmF,EAAoBlJ,IACxB,SAACuI,GACMJ,GACL6B,EAASK,YAAYN,EAAWhG,EAAMwE,MAExC,CAACwB,EAAWC,EAAUjG,EAAMoE,IAzB7B,EA4B+CjI,IAAS,GA5BxD,mBA4BMoK,EA5BN,KA4BwBC,EA5BxB,KA6BKC,EAAcxK,GAAW,sBAAC,sBAAAyF,EAAA,6DAC9B8E,GAAoB,GADU,kBAGtBH,EAAuBL,EAAW/D,GAHZ,6DAK9BuE,GAAoB,GALU,wDAM7B,CAACvE,EAAK+D,EAAWK,IAEpB,OACE,uBAAKjJ,UAAWoG,IAAGsC,OACjB,uBAAKnG,MAAO,CAAE+G,QAAS,OAAQC,WAAY,WACzC,gBAAC,EAAD,CACE3G,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRC,IAAK8B,EAAIgB,OACThG,OAAQA,IAEV,gBAAC2C,EAAA,EAAD,CACEe,KAAK,UACLd,QAAS4G,EACTG,UAAWL,GAEX,gBAAChB,GAAD,QAGHD,GAAcrI,EAASiI,GAAYE,GAAsB,CACxDnD,MACAkC,MACAC,eACAe,0B,oDC9FA0B,GAAsC3K,IAAtC2K,KAAM1K,GAAgCD,IAAhCC,SAAU6C,GAAsB9C,IAAtB8C,OAAQC,GAAc/C,IAAd+C,UAmBhC,IAAM6H,GAA2B,CAC/BC,YAAa,CACXzI,OAAQ,OACR0I,WAAY,CAAEC,SAAU,IAE1BC,KAAM,SAAC5I,GAAD,MAAa,CACjBA,SACAqG,QAAS,EACTwC,WAAY,UACZH,WAAY,CAAEC,SAAU,MAE1BG,OAAQ,CACN9I,OAAQ,EACRqG,QAAS,EACTwC,WAAY,SACZH,WAAY,CAAEC,SAAU,MAItBI,GAAqC,CACzCH,KAAM,CACJ5K,EAAG,GAEL8K,OAAQ,CACN9K,EAAG,KA+BQgL,GA3BKT,IAAK,YAA0B,IA7C9B9J,EACb+C,EA4CoB3C,EAAuB,EAAvBA,SAAUF,EAAa,EAAbA,OAC9BsK,GA9CaxK,EA8CUE,EA7CvB6C,EAAMd,KACZC,IAAU,WAAYa,EAAIP,QAAUxC,IAAQ,CAACA,IACtC+C,EAAIP,SA0CsC,EAvCnD,WACE,IAAMO,EAAMd,KADQ,EAEE7C,GAAS,CAAEmC,OAAQ,IAFrB,mBAEbkJ,EAFa,KAELC,EAFK,KAQpB,OALAxI,IAAU,WACR,IAAMyI,EAAK,IAAIC,MAAe,gBAAEC,EAAF,2BAAaH,EAAIG,EAAMC,gBAErD,OADI/H,EAAIP,SAASmI,EAAGI,QAAQhI,EAAIP,SACzB,kBAAMmI,EAAGK,gBACf,IACI,CAACjI,EAAK0H,GAiCsBQ,GAFc,mBAE1CC,EAF0C,KAE1B3J,EAF0B,KAE1BA,OACvB,OACE,6BACE,kBAAC,KAAO4J,IAAR,CACEC,QACElL,GAAUsK,IAAatK,EACnB,cACAA,EACA,OACA,SAENmL,OAAQ9J,EACR+J,SAAUvB,IAEV,kBAAC,KAAOoB,IAAR,CACEG,SAAUhB,GACVvH,IAAKmI,GAEJ9K,Q,wBC9CHhB,GAA0BD,WAAhBD,GAAgBC,cAqFlC,IAAMoM,GAAS,CACbC,KAAM,CAAEC,MAAO,GACfC,QAAS,CAAED,MAAO,MAEd3H,GAAQ,CACZ0H,KAAM,CAAEG,OAAQ,GAChBC,MAAO,CAAED,OAAQ,IAAK1B,WAAY,CAAEC,SAAU,MAEhD,SAAS2B,KACP,OACE,gBAAC,KAAOV,IAAR,CACE9K,UAAWK,KAAEoL,QACbR,SAAUC,GACVQ,QAAQ,OACRC,WAAW,QACXC,SAAS,WAET,gBAAC,KAAOd,IAAR,CAAY9K,UAAU,aAAaiL,SAAUxH,IAC3C,gBAAC,KAAD,CAAU5C,KAAM,OAMxB,IAkBagL,GAAgB/E,aAlBZ,SAACzG,EAAD,GAA0B,IAApB4D,EAAoB,EAApBA,QAASrB,EAAW,EAAXA,KACxBkC,EAAyB2D,YAA0BpI,GACnD8D,EAAQuC,YAASrG,GACjBiI,EAAoBC,YAAqBlI,GAK/C,MAAO,CACLuI,UALgBkD,YAAkBzL,GAMlC4D,UACAE,QACAW,yBACAC,YAPkByD,YAAenI,GAQjCR,OAAQyI,EAAmB,iBAAgB1F,MAIlBkE,EA/G7B,YAWU,IAVRlE,EAUQ,EAVRA,KACSiC,EASD,EATRZ,QACAE,EAQQ,EARRA,MACAW,EAOQ,EAPRA,uBACAC,EAMQ,EANRA,YACAgH,EAKQ,EALRA,YACAC,EAIQ,EAJRA,UACAnM,EAGQ,EAHRA,OACAgJ,EAEQ,EAFRA,SACAD,EACQ,EADRA,UAEM3E,EAAUW,EACdC,EACAV,EACAW,EACAC,GALM,EAOgDhG,IAAS,GAPzD,mBAODkN,EAPC,KAOqBC,EAPrB,KAQFC,EAAiBtN,IACrB,kBAAMgK,EAASuD,YAAqBxD,EAAWhG,MAC/C,CAACgG,EAAWC,EAAUjG,IAElByJ,EAAsBxN,GAAW,sBAAC,sBAAAyF,EAAA,6DACtC4H,GAAwB,GADc,SAEhCrD,EAASyD,YAA0B1D,EAAWhG,IAFd,OAGtCsJ,GAAwB,GAHc,2CAIrC,CAACtD,EAAWC,EAAUjG,EAAMsJ,IAGtBnD,EACLD,cADFE,IAAOD,wBAGHjG,EAASjE,IAAY,WACzBkK,EAAwB,gBAAiBnG,GAAO/C,KAC/C,CAACA,EAAQkJ,EAAyBnG,IAE/B2J,EAAUC,aAAe,IAAIC,KAAKT,GAAY,IAAIS,MACxD,OACE,uBAAKzM,UAAWK,KAAEqM,MAChB,gBAAC,EAAD,CACE9J,KAAMA,EACNE,OAAQA,EACRD,KAAMkJ,EACNlM,OAAQA,EACRkD,IAAKkB,EAAQ4B,SAEf,uBAAK7F,UAAWK,KAAE2L,WAChB,wCAAgBO,EAAhB,SAEF,gBAAC,GAAD,CAAa1M,OAAQA,GACnB,gBAACiI,GAAD,CAAWjD,IAAKZ,IAChB,uBAAKjE,UAAWK,KAAEsM,cAChB,gBAACnK,EAAA,EAAD,CAAQnD,KAAK,SAASuN,MAAO,gBAACpB,GAAD,MAAa/I,QAAS0J,IACnD,gBAAC3J,EAAA,EAAD,CACEnD,KAAK,eACLuN,MAAO,gBAAC,IAAD,CAAK/L,KAAM,KAClB4B,QAAS4J,EACT7C,UAAWyC,MAIjB,gBAAC,GAAD,CAAapM,QAASA,GACpB,gBAACmI,GAAD,CAAsBnD,IAAKZ,SCnG5B,SAAS4I,GAAT,GAAsC,IAATC,EAAS,EAATA,MAClC,OAAqB,IAAjBA,EAAMjH,OAAqB,KAG7B,gCACE,gBAACkH,EAAA,EAAD,CAAerF,MAAM,mBACrB,2BACGoF,EAAMnH,KAAI,SAACqH,GAAD,OACT,gBAACnB,GAAD,CACE3I,IAAK8J,EAAKpK,KACVA,KAAMoK,EAAKpK,KACXqB,QAAS+I,EAAK/I,QACdpB,KAAMmK,EAAKnK,KACXkJ,YAAaiB,EAAKjB,YAClBC,UAAWgB,EAAKhB,iB,4BCTb,SAASiB,GAAT,GAAwD,IAAtCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,SAClD,OAEE,0BAAQpN,UAAWK,KAAEgN,OAAQ1N,MAAOwN,EAAUC,SAAUA,GACrDF,EAAQvH,KAAI,mCAAEhG,EAAF,KAASiD,EAAT,YACX,0BAAQM,IAAKvD,EAAOA,MAAOA,GACxBiD,O,yCCJLsK,GAAU,CACd,CAAC,UAAW,iCACZ,CAAC,aAAc,gCACf,CAAC,cAAe,gCAChB,CAAC,UAAW,gCACZ,CAAC,WAAY,iCAGPrO,GAAgBC,cAyDxB,IAaegI,gBAbE,SAACzG,GAKhB,MAAO,CACLiN,UAAW,CACTvI,YANgByD,YAAenI,GAO/ByE,uBAN2B2D,YAA0BpI,GAOrDkN,kBANsBC,YAAqBnN,OAUlCyG,EApEf,YAAiC,IAAbwG,EAAa,EAAbA,UAETG,EACL3E,cADFE,IAAOyE,gBAGHC,EAA4B7O,IAChC,SAACY,GACCgO,EAAgB,cAAehO,EAAEC,OAAOC,SAE1C,CAAC8N,IAGGE,EAAuC9O,IAC3C,SAAC+O,GACCH,EAAgB,yBAA0BG,KAE5C,CAACH,IAEH,OACE,gCACE,uBAAKzN,UAAWK,KAAEwN,cAChB,gDACA,2BACE,gBAACZ,GAAD,CACEC,QAASA,GACTC,SAAUG,EAAUvI,YACpBqI,SAAUM,MAIhB,2BACA,uBAAK1N,UAAWK,KAAEwN,cAChB,wDACA,2BACE,gBAAC,KAAD,CACEjL,KAAK,yBACLkL,QAASR,EAAUxI,uBACnBsI,SAAUO,MAIhB,uBAAK3N,UAAWK,KAAEwN,cAChB,mEACA,2BACE,gBAAC,KAAD,CACEjL,KAAK,oBACLkL,QAASR,EAAUC,kBACnBH,SAAU,SAACQ,GAAD,OAAOH,EAAgB,oBAAqBG,Y,qCC/D3D,SAASG,KAAa,MACF9O,aAAY+F,KADV,mBACpBoI,EADoB,KACV/N,EADU,KAE3B,OACE,yBACEW,UAAWgO,KAAOC,MAClBpL,KAAK,OACLlD,MAAON,EACP+N,SAAUA,I,ICYRrO,GAA6CD,WAAnC+C,GAAmC/C,YAAxBD,GAAwBC,cAAX8C,GAAW9C,SA8GrD,SAASoP,KACP,OACE,uBACElO,UAAWoG,IAAG+H,QACd5L,MAAO,CACLtB,MAAO,GACPC,OAAQ,GACRoI,QAAS,OACT8E,eAAgB,SAChB7E,WAAY,WAGd,gBAAC,IAAD,CAAKtI,MAAO,GAAIC,OAAQ,MAaf4F,uBARE,SAACzG,GAAD,MAAQ,CACvBuI,UAAWkD,YAAkBzL,GAC7BgO,WAAYC,YAAmBjO,GAC/BkO,eAAgBC,YAAkBnO,GAClC8D,MAAOuC,YAASrG,GAChBoO,wBAAyBC,YAA2BrO,MAGvCyG,EArIf,YAOG,IAND+B,EAMC,EANDA,SACAwF,EAKC,EALDA,WACAlK,EAIC,EAJDA,MACAoK,EAGC,EAHDA,eACA3F,EAEC,EAFDA,UACA6F,EACC,EADDA,wBAEME,EAAsB/M,GAC1B,IAFD,EAI+C7C,IAAS,GAJxD,mBAIMoK,EAJN,KAIwBC,EAJxB,KAKKwF,EAAoB/P,IAAY,WAChCsK,IAEJC,GAAoB,GACpBP,EAASgG,YAAgBjG,IAAYkG,MACnC,kBAAM1F,GAAoB,MAC1B,kBAAMA,GAAoB,SAE3B,CAACR,EAAWC,EAAUM,IAEnB4F,EAAqBlQ,IAAY,WACrC8P,EAAoBxM,QAAQ6M,QAAUvC,KAAK1F,MAC3C8B,EAASoG,YAAarG,IAAYkG,MAAK,WACrCH,EAAoBxM,QAAQ+M,WAAazC,KAAK1F,WAE/C,CAAC6B,EAAWC,IACfhH,IAAU,WAERkN,IAGA,IAAMI,EAAK,WAEPR,EAAoBxM,QAAQ6M,SAC5BvC,KAAK1F,MAAQ4H,EAAoBxM,QAAQ6M,QAAU,KAEnDD,KAIJ,OADAK,OAAOC,iBAAiB,QAASF,GAAI,GAC9B,kBAAMC,OAAOE,oBAAoB,QAASH,GAAI,MACpD,CAACJ,IApCH,MAsCqDhQ,IAAS,GAtC9D,mBAsCMwQ,EAtCN,KAsC2BC,EAtC3B,KAuCKC,EAAqB5Q,IAAY,WACrC2Q,GAAuB,KACtB,IAzCF,EA6CG1G,cADF7E,QAAWyL,EA5CZ,EA4CYA,yBAA0BC,EA5CtC,EA4CsCA,0BAGvC,OACE,gCACE,gBAAC/P,EAAD,CACEC,OAAQ0P,EACRzP,eAAgB2P,GAEhB,gBAAC,GAAD,OAEF,uBAAKzP,UAAWoG,IAAGwJ,QACjB,gBAAC7C,EAAA,EAAD,CAAerF,MAAM,YACrB,uBAAK1H,UAAWoG,IAAGyJ,aACjB,uBAAK7P,UAAWoG,IAAG0J,qBACjB,gBAAC/B,GAAD,OAEF,gBAACvL,EAAA,EAAD,CAAQe,KAAK,UAAUd,QAAS,kBAAM+M,GAAuB,KAC3D,gBAAC7O,EAAD,CAAWE,KAAM,QAIvB,2BACGwN,EAAW1I,KAAI,SAACoK,GACf,OACE,uBAAK/P,UAAWoG,IAAGsC,MAAOxF,IAAK6M,GAC7B,gBAAC1H,GAAD,CACEzF,KAAMmN,EACN5L,MAAOA,EACPyE,UAAWA,EACXC,SAAUA,SAMpB,gBAACgE,GAAD,CAAmBC,MAAOyB,IAC1B,uBAAKhM,MAAO,CAAErB,OAAQ,MACtB,gBAAC8O,EAAA,EAAD,CACEC,KAAM9G,EAAmB,gBAAC+E,GAAD,MAAe,gBAAC,IAAD,CAAKjN,MAAO,GAAIC,OAAQ,KAChEuB,QAASmM,EACTvP,KAAK,eACLX,SAAUwR,MAEZ,gBAACtQ,EAAD,CACEC,OAAQ4O,EACR3O,eAAgB4P,GAEhB,gBAAC5N,EAAD,CACEC,qBAAsB,kBAAM4N,EAA0B/G,IACtD5G,uBAAwB0N,U,qBC/HlClR,EAAOC,QAAU,CAAC,MAAQ,cAAc,IAAM,aAAa,MAAQ,cAAc,WAAa,cAAc,UAAY,aAAa,IAAM,cAAc,UAAY,cAAc,WAAa,gB,qBCAhMD,EAAOC,QAAU,CAAC,OAAS,aAAa,WAAa","file":"proxies.f9db39b6b9f59e944a16.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"proxyLatency\":\"_1GlyjMFCSf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"_2adLhYLrrV\",\"topBarRight\":\"_1gc_yljm7w\",\"textFilterContainer\":\"_1N0wXB7TV7\",\"group\":\"_35E6rdJlPT\",\"spining\":\"_3NWc4-pcFT\",\"spining_keyframes\":\"_2zZyX5N3wc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labeledInput\":\"_1tkxMBL44k\"};","import './rtf.css';\n\nimport { Action,Fab } from 'react-tiny-fab';\n\nexport const position = {\n  right: 10,\n  bottom: 10,\n};\n\nexport { Fab, Action };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"_1I0EXOg8Vu\"};","import debounce from 'lodash-es/debounce';\nimport * as React from 'react';\nimport { RecoilState, useRecoilState } from 'recoil';\n\nconst { useCallback, useState, useMemo } = React;\n\nexport function useTextInut(\n  x: RecoilState<string>\n): [(e: React.ChangeEvent<HTMLInputElement>) => void, string] {\n  const [, setTextGlobal] = useRecoilState(x);\n  const [text, setText] = useState('');\n  const setTextDebounced = useMemo(() => debounce(setTextGlobal, 300), [\n    setTextGlobal,\n  ]);\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setText(e.target.value);\n      setTextDebounced(e.target.value);\n    },\n    [setTextDebounced]\n  );\n  return [onChange, text];\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FlexCenter\":\"_1NNIVhRL-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"_2qbBB1Sojw\",\"arrow\":\"_1iuVspxe4f\",\"isOpen\":\"_2CN_S7POBQ\",\"btn\":\"_3504uhlYv5\",\"qty\":\"_3Vynmp3NK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"_2epoA7G8CQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"_25Hedjekvk\",\"cnt\":\"_1tfU5GSa-_\",\"afterOpen\":\"_2VMuy-HWwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"updatedAt\":\"_113att7Ifr\",\"body\":\"_26mH_RmGnl\",\"actionFooter\":\"_2cXcxGEUNI\",\"refresh\":\"_2NjdAt9CvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"_1pPZyUDtdp\",\"listSummaryView\":\"_6uXcWV1Myk\"};","import cx from 'clsx';\nimport * as React from 'react';\nimport Modal from 'react-modal';\n\nimport modalStyle from '../Modal.module.css';\nimport s from './BaseModal.module.css';\n\nconst { useMemo } = React;\n\nexport default function BaseModal({ isOpen, onRequestClose, children }) {\n  const className = useMemo(\n    () => ({\n      base: cx(modalStyle.content, s.cnt),\n      afterOpen: s.afterOpen,\n      beforeClose: '',\n    }),\n    []\n  );\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      className={className}\n      overlayClassName={cx(modalStyle.overlay, s.overlay)}\n    >\n      {children}\n    </Modal>\n  );\n}\n","import * as React from 'react';\n\ntype Props = {\n  size?: number;\n  color?: string;\n};\n\nexport default function Equalizer({\n  color = 'currentColor',\n  size = 24,\n}: Props) {\n  return (\n    <svg\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={size}\n      height={size}\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M2 6h9M18.5 6H22\" />\n      <circle cx=\"16\" cy=\"6\" r=\"2\" />\n      <path d=\"M22 18h-9M6 18H2\" />\n      <circle r=\"2\" transform=\"matrix(-1 0 0 1 8 18)\" />\n    </svg>\n  );\n}\n","import * as React from 'react';\n\nimport s from './Styled.module.css';\n\nexport function FlexCenter({ children }: { children: React.ReactNode }) {\n  return <div className={s.FlexCenter}>{children}</div>;\n}\n","import * as React from 'react';\n\nimport Button from '../Button';\nimport { FlexCenter } from '../shared/Styled';\n\nconst { useRef, useEffect } = React;\n\ntype Props = {\n  onClickPrimaryButton?: () => void;\n  onClickSecondaryButton?: () => void;\n};\n\nexport function ClosePrevConns({\n  onClickPrimaryButton,\n  onClickSecondaryButton,\n}: Props) {\n  const primaryButtonRef = useRef<HTMLButtonElement>(null);\n  const secondaryButtonRef = useRef<HTMLButtonElement>(null);\n  useEffect(() => {\n    primaryButtonRef.current.focus();\n  }, []);\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 39) {\n      secondaryButtonRef.current.focus();\n    } else if (e.keyCode === 37) {\n      primaryButtonRef.current.focus();\n    }\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div onKeyDown={handleKeyDown}>\n      <h2>Close Connections?</h2>\n      <p>\n        Click \"Yes\" to close those connections that are still using the old\n        selected proxy in this group\n      </p>\n      <div style={{ height: 30 }} />\n      <FlexCenter>\n        <Button onClick={onClickPrimaryButton} ref={primaryButtonRef}>\n          Yes\n        </Button>\n        <div style={{ width: 20 }} />\n        <Button onClick={onClickSecondaryButton} ref={secondaryButtonRef}>\n          No\n        </Button>\n      </FlexCenter>\n    </div>\n  );\n}\n","import cx from 'clsx';\nimport * as React from 'react';\nimport { ChevronDown } from 'react-feather';\n\nimport Button from './Button';\nimport s from './CollapsibleSectionHeader.module.css';\nimport { SectionNameType } from './shared/Basic';\n\ntype Props = {\n  name: string;\n  type: string;\n  qty?: number;\n  toggle?: () => void;\n  isOpen?: boolean;\n};\n\nexport default function Header({ name, type, toggle, isOpen, qty }: Props) {\n  const handleKeyDown = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      e.preventDefault();\n      if (e.key === 'Enter' || e.key === ' ') {\n        toggle();\n      }\n    },\n    [toggle]\n  );\n  return (\n    <div\n      className={s.header}\n      onClick={toggle}\n      style={{ cursor: 'pointer' }}\n      tabIndex={0}\n      onKeyDown={handleKeyDown}\n      role=\"button\"\n    >\n      <div>\n        <SectionNameType name={name} type={type} />\n      </div>\n\n      {typeof qty === 'number' ? <span className={s.qty}>{qty}</span> : null}\n\n      <Button kind=\"minimal\" onClick={toggle} className={s.btn}>\n        <span className={cx(s.arrow, { [s.isOpen]: isOpen })}>\n          <ChevronDown size={20} />\n        </span>\n      </Button>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport {\n  // types\n  DelayMapping,\n  NonProxyTypes,\n  ProxiesMapping,\n  // atom\n  proxyFilterText,\n  ProxyItem,\n} from '../../store/proxies';\n\nconst { useMemo } = React;\n\nfunction filterAvailableProxies(list: string[], delay: DelayMapping) {\n  return list.filter((name) => {\n    const d = delay[name];\n    if (d === undefined) {\n      return true;\n    }\n    if (d.number === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  });\n}\n\nconst getSortDelay = (\n  d:\n    | undefined\n    | {\n        number?: number;\n      },\n  proxyInfo: ProxyItem\n) => {\n  if (d && typeof d.number === 'number' && d.number > 0) {\n    return d.number;\n  }\n\n  const type = proxyInfo && proxyInfo.type;\n  if (type && NonProxyTypes.indexOf(type) > -1) return -1;\n\n  return 999999;\n};\n\nconst ProxySortingFns = {\n  Natural: (proxies: string[]) => proxies,\n  LatencyAsc: (\n    proxies: string[],\n    delay: DelayMapping,\n    proxyMapping?: ProxiesMapping\n  ) => {\n    return proxies.sort((a, b) => {\n      const d1 = getSortDelay(delay[a], proxyMapping && proxyMapping[a]);\n      const d2 = getSortDelay(delay[b], proxyMapping && proxyMapping[b]);\n      return d1 - d2;\n    });\n  },\n  LatencyDesc: (\n    proxies: string[],\n    delay: DelayMapping,\n    proxyMapping?: ProxiesMapping\n  ) => {\n    return proxies.sort((a, b) => {\n      const d1 = getSortDelay(delay[a], proxyMapping && proxyMapping[a]);\n      const d2 = getSortDelay(delay[b], proxyMapping && proxyMapping[b]);\n      return d2 - d1;\n    });\n  },\n  NameAsc: (proxies: string[]) => {\n    return proxies.sort();\n  },\n  NameDesc: (proxies: string[]) => {\n    return proxies.sort((a, b) => {\n      if (a > b) return -1;\n      if (a < b) return 1;\n      return 0;\n    });\n  },\n};\n\nfunction filterStrArr(all: string[], searchText: string) {\n  const segments = searchText\n    .toLowerCase()\n    .split(' ')\n    .map((x) => x.trim())\n    .filter((x) => !!x);\n\n  if (segments.length === 0) return all;\n\n  return all.filter((name) => {\n    let i = 0;\n    for (; i < segments.length; i++) {\n      const seg = segments[i];\n      if (name.toLowerCase().indexOf(seg) > -1) return true;\n    }\n    return false;\n  });\n}\n\nfunction filterAvailableProxiesAndSort(\n  all: string[],\n  delay: DelayMapping,\n  hideUnavailableProxies: boolean,\n  filterText: string,\n  proxySortBy: string,\n  proxies?: ProxiesMapping\n) {\n  // all is freezed\n  let filtered = [...all];\n  if (hideUnavailableProxies) {\n    filtered = filterAvailableProxies(all, delay);\n  }\n\n  if (typeof filterText === 'string' && filterText !== '') {\n    filtered = filterStrArr(filtered, filterText);\n  }\n  return ProxySortingFns[proxySortBy](filtered, delay, proxies);\n}\n\nexport function useFilteredAndSorted(\n  all: string[],\n  delay: DelayMapping,\n  hideUnavailableProxies: boolean,\n  proxySortBy: string,\n  proxies?: ProxiesMapping\n) {\n  const [filterText] = useRecoilState(proxyFilterText);\n  return useMemo(\n    () =>\n      filterAvailableProxiesAndSort(\n        all,\n        delay,\n        hideUnavailableProxies,\n        filterText,\n        proxySortBy,\n        proxies\n      ),\n    [all, delay, hideUnavailableProxies, filterText, proxySortBy, proxies]\n  );\n}\n","export const keyCodes = {\n  Right: 39,\n  Left: 37,\n  Enter: 13,\n  Space: 32,\n};\n","import * as React from 'react';\n\nimport s0 from './ProxyLatency.module.css';\n\ntype ProxyLatencyProps = {\n  number: number;\n  color: string;\n};\n\nexport function ProxyLatency({ number, color }: ProxyLatencyProps) {\n  return (\n    <span className={s0.proxyLatency} style={{ color }}>\n      <span>{number} ms</span>\n    </span>\n  );\n}\n","import cx from 'clsx';\nimport * as React from 'react';\nimport { keyCodes } from 'src/misc/keycode';\n\nimport { getDelay, getProxies, NonProxyTypes } from '../../store/proxies';\nimport { connect } from '../StateProvider';\nimport s0 from './Proxy.module.css';\nimport { ProxyLatency } from './ProxyLatency';\n\nconst { useMemo } = React;\n\nconst colorMap = {\n  // green\n  good: '#67c23a',\n  // yellow\n  normal: '#d4b75c',\n  // orange\n  bad: '#e67f3c',\n  // bad: '#F56C6C',\n  na: '#909399',\n};\n\nfunction getLabelColor({\n  number,\n}: {\n  number?: number;\n} = {}) {\n  if (number === 0) {\n    return colorMap.na;\n  } else if (number < 200) {\n    return colorMap.good;\n  } else if (number < 400) {\n    return colorMap.normal;\n  } else if (typeof number === 'number') {\n    return colorMap.bad;\n  }\n  return colorMap.na;\n}\n\nfunction getProxyDotBackgroundColor(\n  latency: {\n    number?: number;\n  },\n  proxyType: string\n) {\n  if (NonProxyTypes.indexOf(proxyType) > -1) {\n    return 'linear-gradient(135deg, white 15%, #999 15% 30%, white 30% 45%, #999 45% 60%, white 60% 75%, #999 75% 90%, white 90% 100%)';\n  }\n  return getLabelColor(latency);\n}\n\ntype ProxyProps = {\n  name: string;\n  now?: boolean;\n  proxy: any;\n  latency: any;\n  isSelectable?: boolean;\n  onClick?: (proxyName: string) => unknown;\n};\n\nfunction ProxySmallImpl({\n  now,\n  name,\n  proxy,\n  latency,\n  isSelectable,\n  onClick,\n}: ProxyProps) {\n  const color = useMemo(() => getProxyDotBackgroundColor(latency, proxy.type), [\n    latency,\n    proxy,\n  ]);\n  const title = useMemo(() => {\n    let ret = name;\n    if (latency && typeof latency.number === 'number') {\n      ret += ' ' + latency.number + ' ms';\n    }\n    return ret;\n  }, [name, latency]);\n\n  const doSelect = React.useCallback(() => {\n    isSelectable && onClick && onClick(name);\n  }, [name, onClick, isSelectable]);\n\n  const className = useMemo(() => {\n    return cx(s0.proxySmall, {\n      [s0.now]: now,\n      [s0.selectable]: isSelectable,\n    });\n  }, [isSelectable, now]);\n\n  const handleKeyDown = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.keyCode === keyCodes.Enter) {\n        doSelect();\n      }\n    },\n    [doSelect]\n  );\n\n  return (\n    <div\n      title={title}\n      className={className}\n      style={{ background: color }}\n      onClick={doSelect}\n      onKeyDown={handleKeyDown}\n      role={isSelectable ? 'menuitem' : ''}\n    />\n  );\n}\n\nfunction ProxyImpl({\n  now,\n  name,\n  proxy,\n  latency,\n  isSelectable,\n  onClick,\n}: ProxyProps) {\n  const color = useMemo(() => getLabelColor(latency), [latency]);\n  const doSelect = React.useCallback(() => {\n    isSelectable && onClick && onClick(name);\n  }, [name, onClick, isSelectable]);\n  const handleKeyDown = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.keyCode === keyCodes.Enter) {\n        doSelect();\n      }\n    },\n    [doSelect]\n  );\n  const className = useMemo(() => {\n    return cx(s0.proxy, {\n      [s0.now]: now,\n      [s0.error]: latency && latency.error,\n      [s0.selectable]: isSelectable,\n    });\n  }, [isSelectable, now, latency]);\n\n  return (\n    <div\n      tabIndex={0}\n      className={className}\n      onClick={doSelect}\n      onKeyDown={handleKeyDown}\n      role={isSelectable ? 'menuitem' : ''}\n    >\n      <div className={s0.proxyName}>{name}</div>\n      <div className={s0.row}>\n        <span className={s0.proxyType} style={{ opacity: now ? 0.6 : 0.2 }}>\n          {proxy.type}\n        </span>\n        {latency && latency.number ? (\n          <ProxyLatency number={latency.number} color={color} />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nconst mapState = (s: any, { name }) => {\n  const proxies = getProxies(s);\n  const delay = getDelay(s);\n  return {\n    proxy: proxies[name],\n    latency: delay[name],\n  };\n};\n\nexport const Proxy = connect(mapState)(ProxyImpl);\nexport const ProxySmall = connect(mapState)(ProxySmallImpl);\n","import * as React from 'react';\n\nimport { Proxy, ProxySmall } from './Proxy';\nimport s from './ProxyList.module.css';\n\ntype ProxyListProps = {\n  all: string[];\n  now?: string;\n  isSelectable?: boolean;\n  itemOnTapCallback?: (x: string) => void;\n  show?: boolean;\n};\n\nexport function ProxyList({\n  all,\n  now,\n  isSelectable,\n  itemOnTapCallback,\n}: ProxyListProps) {\n  const proxies = all;\n\n  return (\n    <div className={s.list}>\n      {proxies.map((proxyName) => {\n        return (\n          <Proxy\n            key={proxyName}\n            onClick={itemOnTapCallback}\n            isSelectable={isSelectable}\n            name={proxyName}\n            now={proxyName === now}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport function ProxyListSummaryView({\n  all,\n  now,\n  isSelectable,\n  itemOnTapCallback,\n}: ProxyListProps) {\n  return (\n    <div className={s.listSummaryView}>\n      {all.map((proxyName) => {\n        return (\n          <ProxySmall\n            key={proxyName}\n            onClick={itemOnTapCallback}\n            isSelectable={isSelectable}\n            name={proxyName}\n            now={proxyName === now}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","/* import memoizeOne from 'memoize-one'; */\nimport * as React from 'react';\nimport { Zap } from 'react-feather';\n\nimport {\n  getCollapsibleIsOpen,\n  getHideUnavailableProxies,\n  getProxySortBy,\n} from '../../store/app';\nimport { getProxies, switchProxy } from '../../store/proxies';\nimport Button from '../Button';\nimport CollapsibleSectionHeader from '../CollapsibleSectionHeader';\nimport { connect, useStoreActions } from '../StateProvider';\nimport { useFilteredAndSorted } from './hooks';\nimport s0 from './ProxyGroup.module.css';\nimport { ProxyList, ProxyListSummaryView } from './ProxyList';\n\nconst { createElement, useCallback, useMemo, useState } = React;\n\nfunction ZapWrapper() {\n  return (\n    <div className={s0.zapWrapper}>\n      <Zap size={16} />\n    </div>\n  );\n}\n\nfunction ProxyGroupImpl({\n  name,\n  all: allItems,\n  delay,\n  hideUnavailableProxies,\n  proxySortBy,\n  proxies,\n  type,\n  now,\n  isOpen,\n  apiConfig,\n  dispatch,\n}) {\n  const all = useFilteredAndSorted(\n    allItems,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy,\n    proxies\n  );\n\n  const isSelectable = useMemo(() => type === 'Selector', [type]);\n\n  const {\n    app: { updateCollapsibleIsOpen },\n    proxies: { requestDelayForProxies },\n  } = useStoreActions();\n\n  const toggle = useCallback(() => {\n    updateCollapsibleIsOpen('proxyGroup', name, !isOpen);\n  }, [isOpen, updateCollapsibleIsOpen, name]);\n\n  const itemOnTapCallback = useCallback(\n    (proxyName) => {\n      if (!isSelectable) return;\n      dispatch(switchProxy(apiConfig, name, proxyName));\n    },\n    [apiConfig, dispatch, name, isSelectable]\n  );\n\n  const [isTestingLatency, setIsTestingLatency] = useState(false);\n  const testLatency = useCallback(async () => {\n    setIsTestingLatency(true);\n    try {\n      await requestDelayForProxies(apiConfig, all);\n    } catch (err) {}\n    setIsTestingLatency(false);\n  }, [all, apiConfig, requestDelayForProxies]);\n\n  return (\n    <div className={s0.group}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <CollapsibleSectionHeader\n          name={name}\n          type={type}\n          toggle={toggle}\n          qty={all.length}\n          isOpen={isOpen}\n        />\n        <Button\n          kind=\"minimal\"\n          onClick={testLatency}\n          isLoading={isTestingLatency}\n        >\n          <ZapWrapper />\n        </Button>\n      </div>\n      {createElement(isOpen ? ProxyList : ProxyListSummaryView, {\n        all,\n        now,\n        isSelectable,\n        itemOnTapCallback,\n      })}\n    </div>\n  );\n}\n\nexport const ProxyGroup = connect((s, { name, delay }) => {\n  const proxies = getProxies(s);\n  const collapsibleIsOpen = getCollapsibleIsOpen(s);\n  const proxySortBy = getProxySortBy(s);\n  const hideUnavailableProxies = getHideUnavailableProxies(s);\n\n  const group = proxies[name];\n  const { all, type, now } = group;\n  return {\n    all,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy,\n    proxies,\n    type,\n    now,\n    isOpen: collapsibleIsOpen[`proxyGroup:${name}`],\n  };\n})(ProxyGroupImpl);\n","import { motion } from 'framer-motion';\nimport React from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nconst { memo, useState, useRef, useEffect } = React;\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => void (ref.current = value), [value]);\n  return ref.current;\n}\n\nfunction useMeasure() {\n  const ref = useRef();\n  const [bounds, set] = useState({ height: 0 });\n  useEffect(() => {\n    const ro = new ResizeObserver(([entry]) => set(entry.contentRect));\n    if (ref.current) ro.observe(ref.current);\n    return () => ro.disconnect();\n  }, []);\n  return [ref, bounds];\n}\n\nconst variantsCollpapsibleWrap = {\n  initialOpen: {\n    height: 'auto',\n    transition: { duration: 0 },\n  },\n  open: (height) => ({\n    height,\n    opacity: 1,\n    visibility: 'visible',\n    transition: { duration: 0.3 },\n  }),\n  closed: {\n    height: 0,\n    opacity: 0,\n    visibility: 'hidden',\n    transition: { duration: 0.3 },\n  },\n};\n\nconst variantsCollpapsibleChildContainer = {\n  open: {\n    x: 0,\n  },\n  closed: {\n    x: 20,\n  },\n};\n\nconst Collapsible = memo(({ children, isOpen }) => {\n  const previous = usePrevious(isOpen);\n  const [refToMeature, { height }] = useMeasure();\n  return (\n    <div>\n      <motion.div\n        animate={\n          isOpen && previous === isOpen\n            ? 'initialOpen'\n            : isOpen\n            ? 'open'\n            : 'closed'\n        }\n        custom={height}\n        variants={variantsCollpapsibleWrap}\n      >\n        <motion.div\n          variants={variantsCollpapsibleChildContainer}\n          ref={refToMeature}\n        >\n          {children}\n        </motion.div>\n      </motion.div>\n    </div>\n  );\n});\n\nexport default Collapsible;\n","import { formatDistance } from 'date-fns';\nimport { motion } from 'framer-motion';\nimport * as React from 'react';\nimport { RotateCw, Zap } from 'react-feather';\n\nimport {\n  getClashAPIConfig,\n  getCollapsibleIsOpen,\n  getHideUnavailableProxies,\n  getProxySortBy,\n} from '../../store/app';\nimport {\n  DelayMapping,\n  getDelay,\n  healthcheckProviderByName,\n  updateProviderByName,\n} from '../../store/proxies';\nimport Button from '../Button';\nimport Collapsible from '../Collapsible';\nimport CollapsibleSectionHeader from '../CollapsibleSectionHeader';\nimport { connect, useStoreActions } from '../StateProvider';\nimport { useFilteredAndSorted } from './hooks';\nimport { ProxyList, ProxyListSummaryView } from './ProxyList';\nimport s from './ProxyProvider.module.css';\n\nconst { useState, useCallback } = React;\n\ntype Props = {\n  name: string;\n  proxies: Array<string>;\n  delay: DelayMapping;\n  hideUnavailableProxies: boolean;\n  proxySortBy: string;\n  type: 'Proxy' | 'Rule';\n  vehicleType: 'HTTP' | 'File' | 'Compatible';\n  updatedAt?: string;\n  dispatch: (x: any) => Promise<any>;\n  isOpen: boolean;\n  apiConfig: any;\n};\n\nfunction ProxyProviderImpl({\n  name,\n  proxies: all,\n  delay,\n  hideUnavailableProxies,\n  proxySortBy,\n  vehicleType,\n  updatedAt,\n  isOpen,\n  dispatch,\n  apiConfig,\n}: Props) {\n  const proxies = useFilteredAndSorted(\n    all,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy\n  );\n  const [isHealthcheckLoading, setIsHealthcheckLoading] = useState(false);\n  const updateProvider = useCallback(\n    () => dispatch(updateProviderByName(apiConfig, name)),\n    [apiConfig, dispatch, name]\n  );\n  const healthcheckProvider = useCallback(async () => {\n    setIsHealthcheckLoading(true);\n    await dispatch(healthcheckProviderByName(apiConfig, name));\n    setIsHealthcheckLoading(false);\n  }, [apiConfig, dispatch, name, setIsHealthcheckLoading]);\n\n  const {\n    app: { updateCollapsibleIsOpen },\n  } = useStoreActions();\n\n  const toggle = useCallback(() => {\n    updateCollapsibleIsOpen('proxyProvider', name, !isOpen);\n  }, [isOpen, updateCollapsibleIsOpen, name]);\n\n  const timeAgo = formatDistance(new Date(updatedAt), new Date());\n  return (\n    <div className={s.body}>\n      <CollapsibleSectionHeader\n        name={name}\n        toggle={toggle}\n        type={vehicleType}\n        isOpen={isOpen}\n        qty={proxies.length}\n      />\n      <div className={s.updatedAt}>\n        <small>Updated {timeAgo} ago</small>\n      </div>\n      <Collapsible isOpen={isOpen}>\n        <ProxyList all={proxies} />\n        <div className={s.actionFooter}>\n          <Button text=\"Update\" start={<Refresh />} onClick={updateProvider} />\n          <Button\n            text=\"Health Check\"\n            start={<Zap size={16} />}\n            onClick={healthcheckProvider}\n            isLoading={isHealthcheckLoading}\n          />\n        </div>\n      </Collapsible>\n      <Collapsible isOpen={!isOpen}>\n        <ProxyListSummaryView all={proxies} />\n      </Collapsible>\n    </div>\n  );\n}\n\nconst button = {\n  rest: { scale: 1 },\n  pressed: { scale: 0.95 },\n};\nconst arrow = {\n  rest: { rotate: 0 },\n  hover: { rotate: 360, transition: { duration: 0.3 } },\n};\nfunction Refresh() {\n  return (\n    <motion.div\n      className={s.refresh}\n      variants={button}\n      initial=\"rest\"\n      whileHover=\"hover\"\n      whileTap=\"pressed\"\n    >\n      <motion.div className=\"flexCenter\" variants={arrow}>\n        <RotateCw size={16} />\n      </motion.div>\n    </motion.div>\n  );\n}\n\nconst mapState = (s, { proxies, name }) => {\n  const hideUnavailableProxies = getHideUnavailableProxies(s);\n  const delay = getDelay(s);\n  const collapsibleIsOpen = getCollapsibleIsOpen(s);\n  const apiConfig = getClashAPIConfig(s);\n\n  const proxySortBy = getProxySortBy(s);\n\n  return {\n    apiConfig,\n    proxies,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy,\n    isOpen: collapsibleIsOpen[`proxyProvider:${name}`],\n  };\n};\n\nexport const ProxyProvider = connect(mapState)(ProxyProviderImpl);\n","import * as React from 'react';\n\nimport ContentHeader from '../ContentHeader';\nimport { ProxyProvider } from './ProxyProvider';\n\nexport function ProxyProviderList({ items }) {\n  if (items.length === 0) return null;\n\n  return (\n    <>\n      <ContentHeader title=\"Proxy Provider\" />\n      <div>\n        {items.map((item) => (\n          <ProxyProvider\n            key={item.name}\n            name={item.name}\n            proxies={item.proxies}\n            type={item.type}\n            vehicleType={item.vehicleType}\n            updatedAt={item.updatedAt}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n","import * as React from 'react';\n\nimport s from './Select.module.css';\n\ntype Props = {\n  options: Array<string[]>;\n  selected: string;\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => any;\n};\n\nexport default function Select({ options, selected, onChange }: Props) {\n  return (\n    // eslint-disable-next-line jsx-a11y/no-onchange\n    <select className={s.select} value={selected} onChange={onChange}>\n      {options.map(([value, name]) => (\n        <option key={value} value={value}>\n          {name}\n        </option>\n      ))}\n    </select>\n  );\n}\n","import * as React from 'react';\n\nimport {\n  getAutoCloseOldConns,\n  getHideUnavailableProxies,\n  getProxySortBy,\n} from '../../store/app';\nimport Select from '../shared/Select';\nimport { connect, useStoreActions } from '../StateProvider';\nimport Switch from '../SwitchThemed';\nimport s from './Settings.module.css';\n\nconst options = [\n  ['Natural', 'Original order in config file'],\n  ['LatencyAsc', 'By latency from small to big'],\n  ['LatencyDesc', 'By latency from big to small'],\n  ['NameAsc', 'By name alphabetically (A-Z)'],\n  ['NameDesc', 'By name alphabetically (Z-A)'],\n];\n\nconst { useCallback } = React;\n\nfunction Settings({ appConfig }) {\n  const {\n    app: { updateAppConfig },\n  } = useStoreActions();\n\n  const handleProxySortByOnChange = useCallback(\n    (e) => {\n      updateAppConfig('proxySortBy', e.target.value);\n    },\n    [updateAppConfig]\n  );\n\n  const handleHideUnavailablesSwitchOnChange = useCallback(\n    (v) => {\n      updateAppConfig('hideUnavailableProxies', v);\n    },\n    [updateAppConfig]\n  );\n  return (\n    <>\n      <div className={s.labeledInput}>\n        <span>Sorting in group</span>\n        <div>\n          <Select\n            options={options}\n            selected={appConfig.proxySortBy}\n            onChange={handleProxySortByOnChange}\n          />\n        </div>\n      </div>\n      <hr />\n      <div className={s.labeledInput}>\n        <span>Hide unavailable proxies</span>\n        <div>\n          <Switch\n            name=\"hideUnavailableProxies\"\n            checked={appConfig.hideUnavailableProxies}\n            onChange={handleHideUnavailablesSwitchOnChange}\n          />\n        </div>\n      </div>\n      <div className={s.labeledInput}>\n        <span>Automatically close old connections</span>\n        <div>\n          <Switch\n            name=\"autoCloseOldConns\"\n            checked={appConfig.autoCloseOldConns}\n            onChange={(v) => updateAppConfig('autoCloseOldConns', v)}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst mapState = (s) => {\n  const proxySortBy = getProxySortBy(s);\n  const hideUnavailableProxies = getHideUnavailableProxies(s);\n  const autoCloseOldConns = getAutoCloseOldConns(s);\n\n  return {\n    appConfig: {\n      proxySortBy,\n      hideUnavailableProxies,\n      autoCloseOldConns,\n    },\n  };\n};\nexport default connect(mapState)(Settings);\n","import * as React from 'react';\nimport { useTextInut } from 'src/hooks/useTextInput';\n\nimport { proxyFilterText } from '../../store/proxies';\nimport shared from '../shared.module.css';\n\nexport function TextFilter() {\n  const [onChange, text] = useTextInut(proxyFilterText);\n  return (\n    <input\n      className={shared.input}\n      type=\"text\"\n      value={text}\n      onChange={onChange}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Zap } from 'react-feather';\n\nimport { getClashAPIConfig } from '../../store/app';\nimport {\n  fetchProxies,\n  getDelay,\n  getProxyGroupNames,\n  getProxyProviders,\n  getShowModalClosePrevConns,\n  requestDelayAll,\n} from '../../store/proxies';\nimport Button from '../Button';\nimport ContentHeader from '../ContentHeader';\nimport BaseModal from '../shared/BaseModal';\nimport { Fab, position as fabPosition } from '../shared/Fab';\nimport { connect, useStoreActions } from '../StateProvider';\nimport Equalizer from '../svg/Equalizer';\nimport { ClosePrevConns } from './ClosePrevConns';\nimport s0 from './Proxies.module.css';\nimport { ProxyGroup } from './ProxyGroup';\nimport { ProxyProviderList } from './ProxyProviderList';\nimport Settings from './Settings';\nimport { TextFilter } from './TextFilter';\n\nconst { useState, useEffect, useCallback, useRef } = React;\n\nfunction Proxies({\n  dispatch,\n  groupNames,\n  delay,\n  proxyProviders,\n  apiConfig,\n  showModalClosePrevConns,\n}) {\n  const refFetchedTimestamp = useRef<{ startAt?: number; completeAt?: number }>(\n    {}\n  );\n  const [isTestingLatency, setIsTestingLatency] = useState(false);\n  const requestDelayAllFn = useCallback(() => {\n    if (isTestingLatency) return;\n\n    setIsTestingLatency(true);\n    dispatch(requestDelayAll(apiConfig)).then(\n      () => setIsTestingLatency(false),\n      () => setIsTestingLatency(false)\n    );\n  }, [apiConfig, dispatch, isTestingLatency]);\n\n  const fetchProxiesHooked = useCallback(() => {\n    refFetchedTimestamp.current.startAt = Date.now();\n    dispatch(fetchProxies(apiConfig)).then(() => {\n      refFetchedTimestamp.current.completeAt = Date.now();\n    });\n  }, [apiConfig, dispatch]);\n  useEffect(() => {\n    // fetch it now\n    fetchProxiesHooked();\n\n    // arm a window on focus listener to refresh it\n    const fn = () => {\n      if (\n        refFetchedTimestamp.current.startAt &&\n        Date.now() - refFetchedTimestamp.current.startAt > 3e4 // 30s\n      ) {\n        fetchProxiesHooked();\n      }\n    };\n    window.addEventListener('focus', fn, false);\n    return () => window.removeEventListener('focus', fn, false);\n  }, [fetchProxiesHooked]);\n\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n  const closeSettingsModal = useCallback(() => {\n    setIsSettingsModalOpen(false);\n  }, []);\n\n  const {\n    proxies: { closeModalClosePrevConns, closePrevConnsAndTheModal },\n  } = useStoreActions();\n\n  return (\n    <>\n      <BaseModal\n        isOpen={isSettingsModalOpen}\n        onRequestClose={closeSettingsModal}\n      >\n        <Settings />\n      </BaseModal>\n      <div className={s0.topBar}>\n        <ContentHeader title=\"Proxies\" />\n        <div className={s0.topBarRight}>\n          <div className={s0.textFilterContainer}>\n            <TextFilter />\n          </div>\n          <Button kind=\"minimal\" onClick={() => setIsSettingsModalOpen(true)}>\n            <Equalizer size={16} />\n          </Button>\n        </div>\n      </div>\n      <div>\n        {groupNames.map((groupName: string) => {\n          return (\n            <div className={s0.group} key={groupName}>\n              <ProxyGroup\n                name={groupName}\n                delay={delay}\n                apiConfig={apiConfig}\n                dispatch={dispatch}\n              />\n            </div>\n          );\n        })}\n      </div>\n      <ProxyProviderList items={proxyProviders} />\n      <div style={{ height: 60 }} />\n      <Fab\n        icon={isTestingLatency ? <ColorZap /> : <Zap width={16} height={16} />}\n        onClick={requestDelayAllFn}\n        text=\"Test Latency\"\n        position={fabPosition}\n      />\n      <BaseModal\n        isOpen={showModalClosePrevConns}\n        onRequestClose={closeModalClosePrevConns}\n      >\n        <ClosePrevConns\n          onClickPrimaryButton={() => closePrevConnsAndTheModal(apiConfig)}\n          onClickSecondaryButton={closeModalClosePrevConns}\n        />\n      </BaseModal>\n    </>\n  );\n}\n\nfunction ColorZap() {\n  return (\n    <div\n      className={s0.spining}\n      style={{\n        width: 48,\n        height: 48,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <Zap width={16} height={16} />\n    </div>\n  );\n}\n\nconst mapState = (s) => ({\n  apiConfig: getClashAPIConfig(s),\n  groupNames: getProxyGroupNames(s),\n  proxyProviders: getProxyProviders(s),\n  delay: getDelay(s),\n  showModalClosePrevConns: getShowModalClosePrevConns(s),\n});\n\nexport default connect(mapState)(Proxies);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"proxy\":\"_5-kOJyYfSn\",\"now\":\"MbWebw2VH4\",\"error\":\"_2dlAYgAIKi\",\"selectable\":\"_3rB1UgDAL6\",\"proxyType\":\"nnjdzHZySt\",\"row\":\"_2E11-huRp7\",\"proxyName\":\"_2Eys6UMXCm\",\"proxySmall\":\"_2rRGWVNOYC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"v5oNKUwcTc\",\"zapWrapper\":\"_2fR1H0ysyY\"};"],"sourceRoot":""}