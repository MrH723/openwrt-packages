{"version":3,"sources":["webpack:///./src/components/Selection.js","webpack:///./src/components/TrafficChartSample.js","webpack:///./src/components/Config.js","webpack:///./src/components/Config.module.css","webpack:///./src/components/Selection.module.css"],"names":["Selection","OptionComponent","optionPropsList","selectedIndex","onChange","className","s","root","map","props","idx","cx","item","itemActive","doSelect","ev","preventDefault","key","tabIndex","role","onKeyDown","onClick","propTypes","func","array","number","extraChartOptions","legend","display","scales","xAxes","yAxes","data1","data2","labels","TrafficChart","id","Chart","chartJSResource","read","data","useMemo","datasets","commonDataSetProps","chartStyles","up","down","eleId","useLineChart","style","width","padding","useEffect","React","useState","useCallback","useRef","propsList","optionsRule","label","value","optionsLogLevel","portFields","Config","connect","selectedChartStyleIndex","getSelectedChartStyleIndex","latencyTestUrl","getLatencyTestUrl","apiConfig","getClashAPIConfig","dispatch","configs","configState","setConfigStateInternal","refConfigs","current","openAPIConfigModal","openModal","setConfigState","name","val","handleSwitchOnChange","checked","updateConfigs","handleInputOnChange","e","target","num","parseInt","useStoreActions","selectChartStyleIndex","updateAppConfig","handleInputOnBlur","Error","mode","m","toUpperCase","slice","ContentHeader","title","s0","f","undefined","Input","onBlur","ToggleSwitch","options","sep","section","TrafficChartSample","maxWidth","type","Button","getConfigs","fetchConfigs","PropTypes","object","module","exports"],"mappings":"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","file":"config.34f4fe226a92f4ab6257.js","sourcesContent":["import cx from 'clsx';\nimport { array, func, number } from 'prop-types';\nimport React from 'react';\n\nimport s from './Selection.module.css';\n\nexport default function Selection({\n  OptionComponent,\n  optionPropsList,\n  selectedIndex,\n  onChange,\n}) {\n  return (\n    <div className={s.root}>\n      {optionPropsList.map((props, idx) => {\n        const className = cx(s.item, { [s.itemActive]: idx === selectedIndex });\n        const doSelect = (ev) => {\n          ev.preventDefault();\n          if (idx !== selectedIndex) onChange(idx);\n        };\n        return (\n          <div\n            key={idx}\n            className={className}\n            tabIndex={0}\n            role=\"menuitem\"\n            onKeyDown={doSelect}\n            onClick={doSelect}\n          >\n            <OptionComponent {...props} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nSelection.propTypes = {\n  OptionComponent: func,\n  optionPropsList: array,\n  selectedIndex: number,\n  onChange: func,\n};\n\n// for test\nexport function Option({ title }) {\n  // eslint-disable-next-line no-undef\n  if (__DEV__) {\n    return (\n      <div\n        style={{\n          width: 100,\n          height: 60,\n          backgroundColor: '#eee',\n        }}\n      >\n        {title}\n      </div>\n    );\n  }\n}\n","import React, { useMemo } from 'react';\n\nimport useLineChart from '../hooks/useLineChart';\nimport {\n  chartJSResource,\n  chartStyles,\n  commonDataSetProps,\n} from '../misc/chart';\n\nconst extraChartOptions = {\n  legend: {\n    display: false,\n  },\n  scales: {\n    xAxes: [{ display: false }],\n    yAxes: [{ display: false }],\n  },\n};\n\nconst data1 = [23e3, 35e3, 46e3, 33e3, 90e3, 68e3, 23e3, 45e3];\nconst data2 = [184e3, 183e3, 196e3, 182e3, 190e3, 186e3, 182e3, 189e3];\nconst labels = data1;\n\nexport default function TrafficChart({ id }) {\n  const Chart = chartJSResource.read();\n\n  const data = useMemo(\n    () => ({\n      labels,\n      datasets: [\n        {\n          ...commonDataSetProps,\n          ...chartStyles[id].up,\n          data: data1,\n        },\n        {\n          ...commonDataSetProps,\n          ...chartStyles[id].down,\n          data: data2,\n        },\n      ],\n    }),\n    [id]\n  );\n\n  const eleId = 'chart-' + id;\n  useLineChart(Chart, eleId, data, null, extraChartOptions);\n\n  return (\n    <div\n      style={{\n        width: 130,\n        padding: 5,\n      }}\n    >\n      <canvas id={eleId} />\n    </div>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  getClashAPIConfig,\n  getLatencyTestUrl,\n  getSelectedChartStyleIndex,\n} from '../store/app';\nimport { fetchConfigs, getConfigs, updateConfigs } from '../store/configs';\nimport { openModal } from '../store/modals';\nimport Button from './Button';\nimport s0 from './Config.module.css';\nimport ContentHeader from './ContentHeader';\nimport Input, { SelfControlledInput } from './Input';\nimport Selection from './Selection';\nimport { connect, useStoreActions } from './StateProvider';\nimport Switch from './SwitchThemed';\nimport ToggleSwitch from './ToggleSwitch';\nimport TrafficChartSample from './TrafficChartSample';\n\nconst { useEffect, useState, useCallback, useRef, useMemo } = React;\n\nconst propsList = [{ id: 0 }, { id: 1 }, { id: 2 }, { id: 3 }];\n\nconst optionsRule = [\n  {\n    label: 'Global',\n    value: 'Global',\n  },\n  {\n    label: 'Rule',\n    value: 'Rule',\n  },\n  {\n    label: 'Direct',\n    value: 'Direct',\n  },\n];\n\nconst optionsLogLevel = [\n  {\n    label: 'info',\n    value: 'info',\n  },\n  {\n    label: 'warning',\n    value: 'warning',\n  },\n  {\n    label: 'error',\n    value: 'error',\n  },\n  {\n    label: 'debug',\n    value: 'debug',\n  },\n  {\n    label: 'silent',\n    value: 'silent',\n  },\n];\n\nconst portFields = [\n  { key: 'port', label: 'HTTP Proxy Port' },\n  { key: 'socks-port', label: 'SOCKS5 Proxy Port' },\n  { key: 'mixed-port', label: 'Mixed Port' },\n  { key: 'redir-port', label: 'Redir Port' },\n];\n\nconst mapState = (s) => ({\n  configs: getConfigs(s),\n  apiConfig: getClashAPIConfig(s),\n});\n\nconst mapState2 = (s) => ({\n  selectedChartStyleIndex: getSelectedChartStyleIndex(s),\n  latencyTestUrl: getLatencyTestUrl(s),\n  apiConfig: getClashAPIConfig(s),\n});\n\nconst Config = connect(mapState2)(ConfigImpl);\nexport default connect(mapState)(ConfigContainer);\n\nfunction ConfigContainer({ dispatch, configs, apiConfig }) {\n  useEffect(() => {\n    dispatch(fetchConfigs(apiConfig));\n  }, [dispatch, apiConfig]);\n  return <Config configs={configs} />;\n}\n\nfunction ConfigImpl({\n  dispatch,\n  configs,\n  selectedChartStyleIndex,\n  latencyTestUrl,\n  apiConfig,\n}) {\n  const [configState, setConfigStateInternal] = useState(configs);\n  const refConfigs = useRef(configs);\n  useEffect(() => {\n    if (refConfigs.current !== configs) {\n      setConfigStateInternal(configs);\n    }\n    refConfigs.current = configs;\n  }, [configs]);\n\n  const openAPIConfigModal = useCallback(() => {\n    dispatch(openModal('apiConfig'));\n  }, [dispatch]);\n\n  const setConfigState = useCallback(\n    (name, val) => {\n      setConfigStateInternal({\n        ...configState,\n        [name]: val,\n      });\n    },\n    [configState]\n  );\n\n  const handleSwitchOnChange = useCallback(\n    (checked) => {\n      const name = 'allow-lan';\n      const value = checked;\n      setConfigState(name, value);\n      dispatch(updateConfigs(apiConfig, { [name]: value }));\n    },\n    [apiConfig, dispatch, setConfigState]\n  );\n\n  const handleInputOnChange = useCallback(\n    (e) => {\n      const target = e.target;\n      const { name } = target;\n      const { value } = target;\n      switch (target.name) {\n        case 'mode':\n        case 'log-level':\n          setConfigState(name, value);\n          dispatch(updateConfigs(apiConfig, { [name]: value }));\n          break;\n        case 'redir-port':\n        case 'socks-port':\n        case 'mixed-port':\n        case 'port':\n          if (target.value !== '') {\n            const num = parseInt(target.value, 10);\n            if (num < 0 || num > 65535) return;\n          }\n          setConfigState(name, value);\n          break;\n        default:\n          return;\n      }\n    },\n    [apiConfig, dispatch, setConfigState]\n  );\n\n  const { selectChartStyleIndex, updateAppConfig } = useStoreActions();\n\n  const handleInputOnBlur = useCallback(\n    (e) => {\n      const target = e.target;\n      const { name, value } = target;\n      switch (name) {\n        case 'port':\n        case 'socks-port':\n        case 'mixed-port':\n        case 'redir-port': {\n          const num = parseInt(value, 10);\n          if (num < 0 || num > 65535) return;\n          dispatch(updateConfigs(apiConfig, { [name]: num }));\n          break;\n        }\n        case 'latencyTestUrl': {\n          updateAppConfig(name, value);\n          break;\n        }\n        default:\n          throw new Error(`unknown input name ${name}`);\n      }\n    },\n    [apiConfig, dispatch, updateAppConfig]\n  );\n\n  const mode = useMemo(() => {\n    const m = configState.mode;\n    return typeof m === 'string' && m[0].toUpperCase() + m.slice(1);\n  }, [configState.mode]);\n\n  return (\n    <div>\n      <ContentHeader title=\"Config\" />\n      <div className={s0.root}>\n        {portFields.map((f) =>\n          configState[f.key] !== undefined ? (\n            <div key={f.key}>\n              <div className={s0.label}>{f.label}</div>\n              <Input\n                name={f.key}\n                value={configState[f.key]}\n                onChange={handleInputOnChange}\n                onBlur={handleInputOnBlur}\n              />\n            </div>\n          ) : null\n        )}\n        <div>\n          <div className={s0.label}>Allow LAN</div>\n          <Switch\n            name=\"allow-lan\"\n            checked={configState['allow-lan']}\n            onChange={handleSwitchOnChange}\n          />\n        </div>\n\n        <div>\n          <div className={s0.label}>Mode</div>\n          <ToggleSwitch\n            options={optionsRule}\n            name=\"mode\"\n            value={mode}\n            onChange={handleInputOnChange}\n          />\n        </div>\n\n        <div>\n          <div className={s0.label}>Log Level</div>\n          <ToggleSwitch\n            options={optionsLogLevel}\n            name=\"log-level\"\n            value={configState['log-level']}\n            onChange={handleInputOnChange}\n          />\n        </div>\n      </div>\n\n      <div className={s0.sep}>\n        <div />\n      </div>\n\n      <div className={s0.section}>\n        <div>\n          <div className={s0.label}>Chart Style</div>\n          <Selection\n            OptionComponent={TrafficChartSample}\n            optionPropsList={propsList}\n            selectedIndex={selectedChartStyleIndex}\n            onChange={selectChartStyleIndex}\n          />\n        </div>\n        <div style={{ maxWidth: 360 }}>\n          <div className={s0.label}>Latency Test URL</div>\n          <SelfControlledInput\n            name=\"latencyTestUrl\"\n            type=\"text\"\n            value={latencyTestUrl}\n            onBlur={handleInputOnBlur}\n          />\n        </div>\n        <div>\n          <div className={s0.label}>Action</div>\n          <Button label=\"Switch backend\" onClick={openAPIConfigModal} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nConfig.propTypes = {\n  configs: PropTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_2drigWG08z\",\"section\":\"_3qy5-MPwaw\",\"sep\":\"_1sbDIR8sCY\",\"label\":\"_1Hvw0QbyvH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_3uy3l7xDdI\",\"item\":\"_2hwDLKbh5f\",\"itemActive\":\"_1OeAkW2Cff\"};"],"sourceRoot":""}