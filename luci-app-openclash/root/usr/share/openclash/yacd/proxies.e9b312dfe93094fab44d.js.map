{"version":3,"sources":["webpack://yacd/./src/components/shared/BaseModal.module.css","webpack://yacd/./src/components/shared/BaseModal.js","webpack://yacd/./src/components/svg/Equalizer.tsx","webpack://yacd/./src/components/shared/Styled.module.css","webpack://yacd/./src/components/shared/Styled.tsx","webpack://yacd/./src/components/proxies/ClosePrevConns.tsx","webpack://yacd/./src/components/proxies/Proxies.module.css","webpack://yacd/./src/components/CollapsibleSectionHeader.module.css","webpack://yacd/./src/components/CollapsibleSectionHeader.tsx","webpack://yacd/./src/components/proxies/hooks.tsx","webpack://yacd/./src/components/proxies/ProxyGroup.module.css","webpack://yacd/./src/misc/keycode.ts","webpack://yacd/./src/components/proxies/Proxy.module.css","webpack://yacd/./src/components/proxies/ProxyLatency.module.css","webpack://yacd/./src/components/proxies/ProxyLatency.tsx","webpack://yacd/./src/components/proxies/Proxy.tsx","webpack://yacd/./src/components/proxies/ProxyList.module.css","webpack://yacd/./src/components/proxies/ProxyList.tsx","webpack://yacd/./src/components/proxies/ProxyGroup.tsx","webpack://yacd/./src/components/Collapsible.js","webpack://yacd/./src/components/proxies/ProxyProvider.module.css","webpack://yacd/./src/components/proxies/ProxyProvider.tsx","webpack://yacd/./src/components/proxies/ProxyProviderList.tsx","webpack://yacd/./src/components/shared/Select.module.css","webpack://yacd/./src/components/shared/Select.tsx","webpack://yacd/./src/components/proxies/Settings.module.css","webpack://yacd/./src/components/proxies/Settings.js","webpack://yacd/./src/components/proxies/TextFilter.tsx","webpack://yacd/./src/components/proxies/Proxies.tsx","webpack://yacd/./src/components/shared/Fab.ts","webpack://yacd/./src/hooks/useTextInput.ts","webpack://yacd/./src/components/shared.module.css"],"names":["useMemo","React","BaseModal","isOpen","onRequestClose","children","className","base","cx","modalStyle","s","afterOpen","beforeClose","overlayClassName","Equalizer","color","size","fill","xmlns","viewBox","width","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cy","r","transform","FlexCenter","useRef","useEffect","ClosePrevConns","onClickPrimaryButton","onClickSecondaryButton","primaryButtonRef","secondaryButtonRef","current","focus","onKeyDown","e","keyCode","style","Button","onClick","ref","Header","name","type","toggle","qty","handleKeyDown","preventDefault","key","cursor","tabIndex","role","kind","getSortDelay","proxyInfo","number","NonProxyTypes","ProxySortingFns","Natural","proxies","LatencyAsc","delay","proxyMapping","sort","a","b","LatencyDesc","d1","NameAsc","NameDesc","useFilteredAndSorted","all","hideUnavailableProxies","proxySortBy","useRecoilState","proxyFilterText","filterText","filtered","list","filter","undefined","filterAvailableProxies","searchText","segments","toLowerCase","split","map","x","trim","length","i","seg","indexOf","filterStrArr","filterAvailableProxiesAndSort","keyCodes","ProxyLatency","s0","colorMap","getLabelColor","mapState","getProxies","getDelay","proxy","latency","Proxy","connect","now","isSelectable","doSelect","error","opacity","ProxySmall","proxyType","getProxyDotBackgroundColor","title","ret","background","ProxyList","itemOnTapCallback","proxyName","ProxyListSummaryView","createElement","useCallback","useState","ZapWrapper","Z","ProxyGroup","collapsibleIsOpen","getCollapsibleIsOpen","getProxySortBy","getHideUnavailableProxies","group","allItems","apiConfig","dispatch","useStoreActions","updateCollapsibleIsOpen","app","requestDelayForProxies","switchProxy","isTestingLatency","setIsTestingLatency","testLatency","display","alignItems","isLoading","memo","variantsCollpapsibleWrap","initialOpen","transition","duration","open","visibility","closed","variantsCollpapsibleChildContainer","value","motion","framerMotionResouce","previous","bounds","set","ro","ResizeObserver","entry","contentRect","observe","disconnect","useMeasure","refToMeature","div","animate","custom","variants","button","rest","scale","pressed","arrow","rotate","hover","Refresh","initial","whileHover","whileTap","ProxyProvider","getClashAPIConfig","vehicleType","updatedAt","isHealthcheckLoading","setIsHealthcheckLoading","updateProvider","updateProviderByName","healthcheckProvider","healthcheckProviderByName","timeAgo","formatDistance","Date","text","start","ProxyProviderList","items","ContentHeader","item","Select","options","selected","onChange","appConfig","autoCloseOldConns","getAutoCloseOldConns","updateAppConfig","handleProxySortByOnChange","target","handleHideUnavailablesSwitchOnChange","v","checked","TextFilter","useTextInut","shared","ColorZap","justifyContent","groupNames","getProxyGroupNames","proxyProviders","getProxyProviders","showModalClosePrevConns","getShowModalClosePrevConns","refFetchedTimestamp","requestDelayAllFn","requestDelayAll","then","fetchProxiesHooked","startAt","fetchProxies","completeAt","fn","window","addEventListener","removeEventListener","isSettingsModalOpen","setIsSettingsModalOpen","closeSettingsModal","closeModalClosePrevConns","closePrevConnsAndTheModal","groupName","Fab","icon","position","fabPosition","right","bottom","setTextGlobal","setText","setTextDebounced","debounce"],"mappings":"0QACA,QAA0B,cAA1B,EAA8C,cAA9C,EAAwE,c,ICMhEA,EAAYC,UAEL,SAASC,EAAT,GAAyD,IAApCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,SACpDC,EAAYN,GAChB,iBAAO,CACLO,MAAMC,OAAGC,YAAoBC,GAC7BC,UAAWD,EACXE,YAAa,MAEf,IAEF,OACE,SAAC,IAAD,CACET,OAAQA,EACRC,eAAgBA,EAChBE,UAAWA,EACXO,kBAAkBL,OAAGC,YAAoBC,GAJ3C,SAMGL,I,0BClBQ,SAASS,EAAT,GAGL,QAFRC,aAEQ,MAFA,eAEA,MADRC,YACQ,MADD,GACC,EACR,OACE,iBACEC,KAAK,OACLC,MAAM,6BACNC,QAAQ,YACRC,MAAOJ,EACPK,OAAQL,EACRM,OAAQP,EACRQ,YAAY,IACZC,cAAc,QACdC,eAAe,QATjB,WAWE,iBAAMC,EAAE,sBACR,mBAAQlB,GAAG,KAAKmB,GAAG,IAAIC,EAAE,OACzB,iBAAMF,EAAE,sBACR,mBAAQE,EAAE,IAAIC,UAAU,6BCzB9B,QAA6B,cCGtB,SAASC,EAAT,GAAiE,IAA3CzB,EAA2C,EAA3CA,SAC3B,OAAO,gBAAKC,UAAWI,EAAhB,SAA+BL,I,ICAhC0B,EAAsB9B,SAAd+B,EAAc/B,YAOvB,SAASgC,EAAT,GAGG,IAFRC,EAEQ,EAFRA,qBACAC,EACQ,EADRA,uBAEMC,EAAmBL,EAA0B,MAC7CM,EAAqBN,EAA0B,MACrDC,GAAU,WACRI,EAAiBE,QAAQC,UACxB,IAUH,OAEE,iBAAKC,UAVe,SAACC,GACH,KAAdA,EAAEC,QACJL,EAAmBC,QAAQC,QACJ,KAAdE,EAAEC,SACXN,EAAiBE,QAAQC,SAM3B,WACE,gDACA,6HAIA,gBAAKI,MAAO,CAAEtB,OAAQ,OACtB,UAACS,EAAD,YACE,SAACc,EAAA,EAAD,CAAQC,QAASX,EAAsBY,IAAKV,EAA5C,kBAGA,gBAAKO,MAAO,CAAEvB,MAAO,OACrB,SAACwB,EAAA,EAAD,CAAQC,QAASV,EAAwBW,IAAKT,EAA9C,sBC3CR,QAAyB,cAAzB,EAAqD,cAArD,EAAyF,cAAzF,EAA+G,cAA/G,EAAuI,c,yDCAvI,QAAyB,cAAzB,EAA+C,cAA/C,EAAsE,cAAtE,EAA0F,cAA1F,EAA8G,c,eCe/F,SAASU,EAAT,GAA4D,IAA1CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQ/C,EAAsB,EAAtBA,OAAQgD,EAAc,EAAdA,IACrDC,EAAgBnD,eACpB,SAACwC,GACCA,EAAEY,iBACY,UAAVZ,EAAEa,KAA6B,MAAVb,EAAEa,KACzBJ,MAGJ,CAACA,IAEH,OACE,iBACE5C,UAAWI,EACXmC,QAASK,EACTP,MAAO,CAAEY,OAAQ,WACjBC,SAAU,EACVhB,UAAWY,EACXK,KAAK,SANP,WAQE,0BACE,SAAC,IAAD,CAAiBT,KAAMA,EAAMC,KAAMA,MAGrB,iBAARE,GAAmB,iBAAM7C,UAAWI,EAAjB,SAAyByC,IAAc,MAElE,SAACP,EAAA,EAAD,CAAQc,KAAK,UAAUb,QAASK,EAAQ5C,UAAWI,EAAnD,UACE,iBAAMJ,WAAWE,OAAGE,EAAS,CAAE,CAACA,GAAWP,IAA3C,UACE,SAAC,IAAD,CAAaa,KAAM,Y,qEC9BrBhB,EAAYC,UAgBpB,IAAM0D,EAAe,SACnBjC,EAKAkC,GAEA,GAAIlC,GAAyB,iBAAbA,EAAEmC,QAAuBnC,EAAEmC,OAAS,EAClD,OAAOnC,EAAEmC,OAGX,IAAMZ,EAAOW,GAAaA,EAAUX,KACpC,OAAIA,GAAQa,aAAsBb,IAAS,GAAW,EAE/C,QAGHc,EAAkB,CACtBC,QAAS,SAACC,GAAD,OAAuBA,GAChCC,WAAY,SACVD,EACAE,EACAC,GAEA,OAAOH,EAAQI,MAAK,SAACC,EAAGC,GAGtB,OAFWZ,EAAaQ,EAAMG,GAAIF,GAAgBA,EAAaE,IACpDX,EAAaQ,EAAMI,GAAIH,GAAgBA,EAAaG,QAInEC,YAAa,SACXP,EACAE,EACAC,GAEA,OAAOH,EAAQI,MAAK,SAACC,EAAGC,GACtB,IAAME,EAAKd,EAAaQ,EAAMG,GAAIF,GAAgBA,EAAaE,IAE/D,OADWX,EAAaQ,EAAMI,GAAIH,GAAgBA,EAAaG,IACnDE,MAGhBC,QAAS,SAACT,GACR,OAAOA,EAAQI,QAEjBM,SAAU,SAACV,GACT,OAAOA,EAAQI,MAAK,SAACC,EAAGC,GACtB,OAAID,EAAIC,GAAW,EACfD,EAAIC,EAAU,EACX,OA4CN,SAASK,EACdC,EACAV,EACAW,EACAC,EACAd,GACA,OACqBe,QAAeC,MAA7BC,GADP,eAEA,OAAOlF,GACL,kBA7BJ,SACE6E,EACAV,EACAW,EACAI,EACAH,EACAd,GAGA,IAAIkB,GAAW,OAAIN,GAQnB,OAPIC,IACFK,EAlGJ,SAAgCC,EAAgBjB,GAC9C,OAAOiB,EAAKC,QAAO,SAACrC,GAClB,IAAMtB,EAAIyC,EAAMnB,GAChB,YAAUsC,IAAN5D,GAGa,IAAbA,EAAEmC,UA4FK0B,CAAuBV,EAAKV,IAGf,iBAAfe,GAA0C,KAAfA,IACpCC,EAlCJ,SAAsBN,EAAeW,GACnC,IAAMC,EAAWD,EACdE,cACAC,MAAM,KACNC,KAAI,SAACC,GAAD,OAAOA,EAAEC,UACbT,QAAO,SAACQ,GAAD,QAASA,KAEnB,OAAwB,IAApBJ,EAASM,OAAqBlB,EAE3BA,EAAIQ,QAAO,SAACrC,GAEjB,IADA,IAAIgD,EAAI,EACDA,EAAIP,EAASM,OAAQC,IAAK,CAC/B,IAAMC,EAAMR,EAASO,GACrB,GAAIhD,EAAK0C,cAAcQ,QAAQD,IAAQ,EAAG,OAAO,EAEnD,OAAO,KAmBIE,CAAahB,EAAUD,IAE7BnB,EAAgBgB,GAAaI,EAAUhB,EAAOF,GAajDmC,CACEvB,EACAV,EACAW,EACAI,EACAH,EACAd,KAEJ,CAACY,EAAKV,EAAOW,EAAwBI,EAAYH,EAAad,IC3IlE,SAAgB,OAAS,aAAa,WAAa,eCD5C,IAAMoC,EAGJ,GCFT,QAAwB,cAAxB,EAA4C,aAA5C,GAAiE,cAAjE,GAA4F,cAA5F,GAAsH,aAAtH,GAAyI,cAAzI,GAAmK,cAAnK,GAA8L,cCA9L,GAA+B,cCQxB,SAASC,GAAT,GAA4D,IAApCzC,EAAoC,EAApCA,OAAQ9C,EAA4B,EAA5BA,MACrC,OACE,iBAAMT,UAAWiG,GAAiB5D,MAAO,CAAE5B,SAA3C,UACE,4BAAO8C,EAAP,W,ICHE7D,GAAYC,UAEduG,GAEE,UAFFA,GAII,UAJJA,GAMC,UANDA,GAQA,UAGN,SAASC,KAID,6DAAJ,GAHF5C,EAGM,EAHNA,OAIA,OAAe,IAAXA,EACK2C,GACE3C,EAAS,IACX2C,GACE3C,EAAS,IACX2C,GACoB,iBAAX3C,EACT2C,GAEFA,GA6HT,IAAME,GAAW,SAAChG,EAAD,GAAsB,IAAXsC,EAAW,EAAXA,KACpBiB,GAAU0C,QAAWjG,GACrByD,GAAQyC,QAASlG,GACvB,MAAO,CACLmG,MAAO5C,EAAQjB,GACf8D,QAAS3C,EAAMnB,KAIN+D,IAAQC,QAAQN,GAARM,EA1DrB,YAOe,IANbC,EAMa,EANbA,IACAjE,EAKa,EALbA,KACA6D,EAIa,EAJbA,MACAC,EAGa,EAHbA,QACAI,EAEa,EAFbA,aACArE,EACa,EADbA,QAEM9B,EAAQf,IAAQ,kBAAMyG,GAAcK,KAAU,CAACA,IAC/CK,EAAWlH,eAAkB,WACjCiH,GAAgBrE,GAAWA,EAAQG,KAClC,CAACA,EAAMH,EAASqE,IACb9D,EAAgBnD,eACpB,SAACwC,GACKA,EAAEC,UAAY2D,GAChBc,MAGJ,CAACA,IAEG7G,EAAYN,IAAQ,WACxB,OAAOQ,OAAG+F,EAAU,CAClB,CAACA,GAASU,EACV,CAACV,IAAWO,GAAWA,EAAQM,MAC/B,CAACb,IAAgBW,MAElB,CAACA,EAAcD,EAAKH,IAEvB,OACE,iBACEtD,SAAU,EACVlD,UAAWA,EACXuC,QAASsE,EACT3E,UAAWY,EACXK,KAAMyD,EAAe,WAAa,GALpC,WAOE,gBAAK5G,UAAWiG,GAAhB,SAA+BvD,KAC/B,iBAAK1C,UAAWiG,GAAhB,WACE,iBAAMjG,UAAWiG,GAAc5D,MAAO,CAAE0E,QAASJ,EAAM,GAAM,IAA7D,SACGJ,EAAM5D,OAER6D,GAAWA,EAAQjD,QAClB,SAACyC,GAAD,CAAczC,OAAQiD,EAAQjD,OAAQ9C,MAAOA,IAC3C,cAgBCuG,IAAaN,QAAQN,GAARM,EA/G1B,YAOe,IANbC,EAMa,EANbA,IACAjE,EAKa,EALbA,KACA6D,EAIa,EAJbA,MACAC,EAGa,EAHbA,QACAI,EAEa,EAFbA,aACArE,EACa,EADbA,QAEM9B,EAAQf,IAAQ,kBA7BxB,SACE8G,EAGAS,GAEA,OAAIzD,aAAsByD,IAAc,EAC/B,6HAEFd,GAAcK,GAoBOU,CAA2BV,EAASD,EAAM5D,QAAO,CAC3E6D,EACAD,IAEIY,EAAQzH,IAAQ,WACpB,IAAI0H,EAAM1E,EAIV,OAHI8D,GAAqC,iBAAnBA,EAAQjD,SAC5B6D,GAAO,IAAMZ,EAAQjD,OAAS,OAEzB6D,IACN,CAAC1E,EAAM8D,IAEJK,EAAWlH,eAAkB,WACjCiH,GAAgBrE,GAAWA,EAAQG,KAClC,CAACA,EAAMH,EAASqE,IAEb5G,EAAYN,IAAQ,WACxB,OAAOQ,OAAG+F,GAAe,CACvB,CAACA,GAASU,EACV,CAACV,IAAgBW,MAElB,CAACA,EAAcD,IAEZ7D,EAAgBnD,eACpB,SAACwC,GACKA,EAAEC,UAAY2D,GAChBc,MAGJ,CAACA,IAGH,OACE,gBACEM,MAAOA,EACPnH,UAAWA,EACXqC,MAAO,CAAEgF,WAAY5G,GACrB8B,QAASsE,EACT3E,UAAWY,EACXK,KAAMyD,EAAe,WAAa,QC1GxC,SAAuB,cAAvB,GAAuD,cCYhD,SAASU,GAAT,GAKY,IAJjB/C,EAIiB,EAJjBA,IACAoC,EAGiB,EAHjBA,IACAC,EAEiB,EAFjBA,aACAW,EACiB,EADjBA,kBAEM5D,EAAUY,EAEhB,OACE,gBAAKvE,UAAWI,GAAhB,SACGuD,EAAQ2B,KAAI,SAACkC,GACZ,OACE,SAACf,GAAD,CAEElE,QAASgF,EACTX,aAAcA,EACdlE,KAAM8E,EACNb,IAAKa,IAAcb,GAJda,QAYV,SAASC,GAAT,GAKY,IAJjBlD,EAIiB,EAJjBA,IACAoC,EAGiB,EAHjBA,IACAC,EAEiB,EAFjBA,aACAW,EACiB,EADjBA,kBAEA,OACE,gBAAKvH,UAAWI,GAAhB,SACGmE,EAAIe,KAAI,SAACkC,GACR,OACE,SAACR,GAAD,CAEEzE,QAASgF,EACTX,aAAcA,EACdlE,KAAM8E,EACNb,IAAKa,IAAcb,GAJda,Q,IChCTE,GAAkD/H,gBAAnCgI,GAAmChI,cAAtBD,GAAsBC,UAAbiI,GAAajI,WAE1D,SAASkI,KACP,OACE,gBAAK7H,UAAWiG,aAAhB,UACE,SAAC,EAAA6B,EAAD,CAAKpH,KAAM,OAkFV,IAAMqH,IAAarB,SAAQ,SAACtG,EAAD,GAAwB,IAAlBsC,EAAkB,EAAlBA,KAAMmB,EAAY,EAAZA,MACtCF,GAAU0C,QAAWjG,GACrB4H,GAAoBC,QAAqB7H,GACzCqE,GAAcyD,QAAe9H,GAC7BoE,GAAyB2D,QAA0B/H,GAEnDgI,EAAQzE,EAAQjB,GAEtB,MAAO,CACL6B,IAFyB6D,EAAnB7D,IAGNV,QACAW,yBACAC,cACAd,UACAhB,KAPyByF,EAAdzF,KAQXgE,IARyByB,EAARzB,IASjB9G,OAAQmI,EAAmB,cAAatF,MAhBlBgE,EA7E1B,YAYG,IAXDhE,EAWC,EAXDA,KACK2F,EAUJ,EAVD9D,IACAV,EASC,EATDA,MACAW,EAQC,EARDA,uBACAC,EAOC,EAPDA,YACAd,EAMC,EANDA,QACAhB,EAKC,EALDA,KACAgE,EAIC,EAJDA,IACA9G,EAGC,EAHDA,OACAyI,EAEC,EAFDA,UACAC,EACC,EADDA,SAEMhE,EAAMD,EACV+D,EACAxE,EACAW,EACAC,EACAd,GAGIiD,EAAelH,IAAQ,iBAAe,aAATiD,IAAqB,CAACA,IATxD,GAcG6F,UAFKC,EAZR,EAYCC,IAAOD,wBACIE,EAbZ,EAaChF,QAAWgF,uBAGP/F,EAAS+E,IAAY,WACzBc,EAAwB,aAAc/F,GAAO7C,KAC5C,CAACA,EAAQ4I,EAAyB/F,IAE/B6E,EAAoBI,IACxB,SAACH,GACMZ,GACL2B,GAASK,QAAYN,EAAW5F,EAAM8E,MAExC,CAACc,EAAWC,EAAU7F,EAAMkE,IAzB7B,EA4B+CgB,IAAS,GA5BxD,eA4BMiB,EA5BN,KA4BwBC,EA5BxB,KA6BKC,EAAcpB,IAAW,iBAAC,qFAC9BmB,GAAoB,GADU,kBAGtBH,EAAuBL,EAAW/D,GAHZ,6DAK9BuE,GAAoB,GALU,wDAM7B,CAACvE,EAAK+D,EAAWK,IAEpB,OACE,iBAAK3I,UAAWiG,QAAhB,WACE,iBAAK5D,MAAO,CAAE2G,QAAS,OAAQC,WAAY,UAA3C,WACE,SAAC,EAAD,CACEvG,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRC,IAAK0B,EAAIkB,OACT5F,OAAQA,KAEV,SAACyC,EAAA,EAAD,CACEc,KAAK,UACLb,QAASwG,EACTG,UAAWL,EAHb,UAKE,SAAChB,GAAD,SAGHH,GAAc7H,EAASyH,GAAYG,GAAsB,CACxDlD,MACAoC,MACAC,eACAW,4B,gDC7FA4B,GAAsCxJ,OAAhCiI,GAAgCjI,WAAtB8B,GAAsB9B,SAAd+B,GAAc/B,YAmB9C,IAAMyJ,GAA2B,CAC/BC,YAAa,CACXtI,OAAQ,OACRuI,WAAY,CAAEC,SAAU,IAE1BC,KAAM,SAACzI,GAAD,MAAa,CACjBA,SACAgG,QAAS,EACT0C,WAAY,UACZH,WAAY,CAAEC,SAAU,MAE1BG,OAAQ,CACN3I,OAAQ,EACRgG,QAAS,EACT0C,WAAY,SACZH,WAAY,CAAEC,SAAU,MAItBI,GAAqC,CACzCH,KAAM,CACJjE,EAAG,GAELmE,OAAQ,CACNnE,EAAG,KAiCP,SA7BoB4D,IAAK,YAA0B,IA7C9BS,EACbpH,EA4CoBzC,EAAuB,EAAvBA,SAAUF,EAAa,EAAbA,OAE9BgK,EADSC,YACOD,OAChBE,GAhDaH,EAgDU/J,EA/CvB2C,EAAMf,KACZC,IAAU,WAAYc,EAAIR,QAAU4H,IAAQ,CAACA,IACtCpH,EAAIR,SA0CsC,EAvCnD,WACE,IAAMQ,EAAMf,KADQ,EAEEmG,GAAS,CAAE7G,OAAQ,IAFrB,eAEbiJ,EAFa,KAELC,EAFK,KAQpB,OALAvI,IAAU,WACR,IAAMwI,EAAK,IAAIC,MAAe,gBAAEC,GAAF,sBAAaH,EAAIG,EAAMC,gBAErD,OADI7H,EAAIR,SAASkI,EAAGI,QAAQ9H,EAAIR,SACzB,kBAAMkI,EAAGK,gBACf,IACI,CAAC/H,EAAKwH,GAmCsBQ,GAJc,eAI1CC,EAJ0C,KAI1B1J,EAJ0B,KAI1BA,OACvB,OACE,0BACE,SAAC8I,EAAOa,IAAR,CACEC,QACE9K,GAAUkK,IAAalK,EACnB,cACAA,EACA,OACA,SAEN+K,OAAQ7J,EACR8J,SAAUzB,GATZ,UAWE,SAACS,EAAOa,IAAR,CACEG,SAAUlB,GACVnH,IAAKiI,EAFP,SAIG1K,WCzEX,GAA4B,cAA5B,GAAiD,cAAjD,GAA8E,cAA9E,GAAsG,c,ICwB9F6H,GAA0BjI,WAAhBgI,GAAgBhI,cAqFlC,IAAMmL,GAAS,CACbC,KAAM,CAAEC,MAAO,GACfC,QAAS,CAAED,MAAO,MAEdE,GAAQ,CACZH,KAAM,CAAEI,OAAQ,GAChBC,MAAO,CAAED,OAAQ,IAAK7B,WAAY,CAAEC,SAAU,MAEhD,SAAS8B,KACP,IACMxB,EADSC,YACOD,OACtB,OACE,SAACA,EAAOa,IAAR,CACE1K,UAAWI,GACXyK,SAAUC,GACVQ,QAAQ,OACRC,WAAW,QACXC,SAAS,UALX,UAOE,SAAC3B,EAAOa,IAAR,CAAY1K,UAAU,aAAa6K,SAAUK,GAA7C,UACE,SAAC,KAAD,CAAUxK,KAAM,SAMxB,IAkBa+K,IAAgB/E,SAlBZ,SAACtG,EAAD,GAA0B,IAApBuD,EAAoB,EAApBA,QAASjB,EAAW,EAAXA,KACxB8B,GAAyB2D,QAA0B/H,GACnDyD,GAAQyC,QAASlG,GACjB4H,GAAoBC,QAAqB7H,GAK/C,MAAO,CACLkI,WALgBoD,QAAkBtL,GAMlCuD,UACAE,QACAW,yBACAC,aAPkByD,QAAe9H,GAQjCP,OAAQmI,EAAmB,iBAAgBtF,MAIlBgE,EAjH7B,YAWU,IAVRhE,EAUQ,EAVRA,KACS6B,EASD,EATRZ,QACAE,EAQQ,EARRA,MACAW,EAOQ,EAPRA,uBACAC,EAMQ,EANRA,YACAkH,EAKQ,EALRA,YACAC,EAIQ,EAJRA,UACA/L,EAGQ,EAHRA,OACA0I,EAEQ,EAFRA,SACAD,EACQ,EADRA,UAEM3E,EAAUW,EACdC,EACAV,EACAW,EACAC,GALM,EAOgDmD,IAAS,GAPzD,eAODiE,EAPC,KAOqBC,EAPrB,KAQFC,EAAiBpE,IACrB,kBAAMY,GAASyD,QAAqB1D,EAAW5F,MAC/C,CAAC4F,EAAWC,EAAU7F,IAElBuJ,EAAsBtE,IAAW,iBAAC,qFACtCmE,GAAwB,GADc,SAEhCvD,GAAS2D,QAA0B5D,EAAW5F,IAFd,OAGtCoJ,GAAwB,GAHc,2CAIrC,CAACxD,EAAWC,EAAU7F,EAAMoJ,IAGtBrD,GACLD,UADFE,IAAOD,wBAGH7F,EAAS+E,IAAY,WACzBc,EAAwB,gBAAiB/F,GAAO7C,KAC/C,CAACA,EAAQ4I,EAAyB/F,IAE/ByJ,GAAUC,QAAe,IAAIC,KAAKT,GAAY,IAAIS,MACxD,OACE,iBAAKrM,UAAWI,GAAhB,WACE,SAAC,EAAD,CACEsC,KAAMA,EACNE,OAAQA,EACRD,KAAMgJ,EACN9L,OAAQA,EACRgD,IAAKc,EAAQ8B,UAEf,gBAAKzF,UAAWI,GAAhB,UACE,wCAAgB+L,EAAhB,aAEF,UAAC,GAAD,CAAatM,OAAQA,EAArB,WACE,SAACyH,GAAD,CAAW/C,IAAKZ,KAChB,iBAAK3D,UAAWI,GAAhB,WACE,SAACkC,EAAA,EAAD,CAAQgK,KAAK,SAASC,OAAO,SAAClB,GAAD,IAAa9I,QAASwJ,KACnD,SAACzJ,EAAA,EAAD,CACEgK,KAAK,eACLC,OAAO,SAAC,EAAAzE,EAAD,CAAKpH,KAAM,KAClB6B,QAAS0J,EACT/C,UAAW2C,WAIjB,SAAC,GAAD,CAAahM,QAASA,EAAtB,UACE,SAAC4H,GAAD,CAAsBlD,IAAKZ,YCnG5B,SAAS6I,GAAT,GAAsC,IAATC,EAAS,EAATA,MAClC,OAAqB,IAAjBA,EAAMhH,OAAqB,MAG7B,iCACE,SAACiH,EAAA,EAAD,CAAevF,MAAM,oBACrB,yBACGsF,EAAMnH,KAAI,SAACqH,GAAD,OACT,SAAClB,GAAD,CAEE/I,KAAMiK,EAAKjK,KACXiB,QAASgJ,EAAKhJ,QACdhB,KAAMgK,EAAKhK,KACXgJ,YAAagB,EAAKhB,YAClBC,UAAWe,EAAKf,WALXe,EAAKjK,cCbtB,SAAyB,cCSV,SAASkK,GAAT,GAAwD,IAAtCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,SAClD,OAEE,mBAAQ/M,UAAWI,GAAUwJ,MAAOkD,EAAUC,SAAUA,EAAxD,SACGF,EAAQvH,KAAI,+BAAEsE,EAAF,KAASlH,EAAT,YACX,mBAAoBkH,MAAOA,EAA3B,SACGlH,GADUkH,Q,gBCdrB,SAA+B,cCW/B,IAAMiD,GAAU,CACd,CAAC,UAAW,iCACZ,CAAC,aAAc,gCACf,CAAC,cAAe,gCAChB,CAAC,UAAW,gCACZ,CAAC,WAAY,iCAGPlF,GAAgBhI,cAsExB,UAAe+G,SAbE,SAACtG,GAKhB,MAAO,CACL4M,UAAW,CACTvI,aANgByD,QAAe9H,GAO/BoE,wBAN2B2D,QAA0B/H,GAOrD6M,mBANsBC,QAAqB9M,OAUjD,EApEA,YAAiC,IAAb4M,EAAa,EAAbA,UAETG,GACL3E,UADFE,IAAOyE,gBAGHC,EAA4BzF,IAChC,SAACxF,GACCgL,EAAgB,cAAehL,EAAEkL,OAAOzD,SAE1C,CAACuD,IAGGG,EAAuC3F,IAC3C,SAAC4F,GACCJ,EAAgB,yBAA0BI,KAE5C,CAACJ,IAEH,OACE,iCACE,iBAAKnN,UAAWI,GAAhB,WACE,gDACA,0BACE,SAACwM,GAAD,CACEC,QAASA,GACTC,SAAUE,EAAUvI,YACpBsI,SAAUK,UAIhB,mBACA,iBAAKpN,UAAWI,GAAhB,WACE,wDACA,0BACE,SAAC,KAAD,CACEsC,KAAK,yBACL8K,QAASR,EAAUxI,uBACnBuI,SAAUO,UAIhB,iBAAKtN,UAAWI,GAAhB,WACE,mEACA,0BACE,SAAC,KAAD,CACEsC,KAAK,oBACL8K,QAASR,EAAUC,kBACnBF,SAAU,SAACQ,GAAD,OAAOJ,EAAgB,oBAAqBI,iB,4BC/D3D,SAASE,KAAa,OACFC,QAAY/I,MADV,eACpBoI,EADoB,KACVT,EADU,KAE3B,OACE,kBACEtM,UAAW2N,WACXhL,KAAK,OACLiH,MAAO0C,EACPS,SAAUA,I,ICYRnF,GAA6CjI,WAAnC+B,GAAmC/B,YAAxBgI,GAAwBhI,cAAX8B,GAAW9B,SA8GrD,SAASiO,KACP,OACE,gBACE5N,UAAWiG,EACX5D,MAAO,CACLvB,MAAO,GACPC,OAAQ,GACRiI,QAAS,OACT6E,eAAgB,SAChB5E,WAAY,UAPhB,UAUE,SAAC,EAAAnB,EAAD,CAAKhH,MAAO,GAAIC,OAAQ,OAa9B,UAAe2F,SARE,SAACtG,GAAD,MAAQ,CACvBkI,WAAWoD,QAAkBtL,GAC7B0N,YAAYC,QAAmB3N,GAC/B4N,gBAAgBC,OAAkB7N,GAClCyD,OAAOyC,QAASlG,GAChB8N,yBAAyBC,QAA2B/N,MAGtD,EArIA,YAOG,IANDmI,EAMC,EANDA,SACAuF,EAKC,EALDA,WACAjK,EAIC,EAJDA,MACAmK,EAGC,EAHDA,eACA1F,EAEC,EAFDA,UACA4F,EACC,EADDA,wBAEME,EAAsB3M,GAC1B,IAFD,EAI+CmG,IAAS,GAJxD,eAIMiB,EAJN,KAIwBC,EAJxB,KAKKuF,EAAoB1G,IAAY,WAChCkB,IAEJC,GAAoB,GACpBP,GAAS+F,QAAgBhG,IAAYiG,MACnC,kBAAMzF,GAAoB,MAC1B,kBAAMA,GAAoB,SAE3B,CAACR,EAAWC,EAAUM,IAEnB2F,EAAqB7G,IAAY,WACrCyG,EAAoBpM,QAAQyM,QAAUpC,KAAK1F,MAC3C4B,GAASmG,QAAapG,IAAYiG,MAAK,WACrCH,EAAoBpM,QAAQ2M,WAAatC,KAAK1F,WAE/C,CAAC2B,EAAWC,IACf7G,IAAU,WAER8M,IAGA,IAAMI,EAAK,WAEPR,EAAoBpM,QAAQyM,SAC5BpC,KAAK1F,MAAQyH,EAAoBpM,QAAQyM,QAAU,KAEnDD,KAIJ,OADAK,OAAOC,iBAAiB,QAASF,GAAI,GAC9B,kBAAMC,OAAOE,oBAAoB,QAASH,GAAI,MACpD,CAACJ,IApCH,MAsCqD5G,IAAS,GAtC9D,eAsCMoH,EAtCN,KAsC2BC,EAtC3B,KAuCKC,EAAqBvH,IAAY,WACrCsH,GAAuB,KACtB,IAzCF,GA6CGzG,UADF7E,QAAWwL,EA5CZ,EA4CYA,yBAA0BC,EA5CtC,EA4CsCA,0BAGvC,OACE,iCACE,SAACxP,EAAD,CACEC,OAAQmP,EACRlP,eAAgBoP,EAFlB,UAIE,SAAC,GAAD,OAEF,iBAAKlP,UAAWiG,EAAhB,WACE,SAACyG,EAAA,EAAD,CAAevF,MAAM,aACrB,iBAAKnH,UAAWiG,EAAhB,WACE,gBAAKjG,UAAWiG,EAAhB,UACE,SAACwH,GAAD,OAEF,SAACnL,EAAA,EAAD,CAAQc,KAAK,UAAUb,QAAS,kBAAM0M,GAAuB,IAA7D,UACE,SAACzO,EAAD,CAAWE,KAAM,cAIvB,yBACGoN,EAAWxI,KAAI,SAAC+J,GACf,OACE,gBAAKrP,UAAWiG,EAAhB,UACE,SAAC8B,GAAD,CACErF,KAAM2M,EACNxL,MAAOA,EACPyE,UAAWA,EACXC,SAAUA,KALiB8G,SAWrC,SAAC7C,GAAD,CAAmBC,MAAOuB,KAC1B,gBAAK3L,MAAO,CAAEtB,OAAQ,OACtB,SAACuO,EAAA,GAAD,CACEC,KAAM1G,GAAmB,SAAC+E,GAAD,KAAe,SAAC,EAAA9F,EAAD,CAAKhH,MAAO,GAAIC,OAAQ,KAChEwB,QAAS8L,EACT/B,KAAK,eACLkD,SAAUC,QAEZ,SAAC7P,EAAD,CACEC,OAAQqO,EACRpO,eAAgBqP,EAFlB,UAIE,SAACxN,EAAD,CACEC,qBAAsB,kBAAMwN,EAA0B9G,IACtDzG,uBAAwBsN,a,oFC5HrBK,EAAW,CACtBE,MAAO,GACPC,OAAQ,K,6FCFFhI,EAAmChI,cAAtBiI,EAAsBjI,WAAZD,EAAYC,UAEpC,SAAS+N,EACdnI,GAC4D,OAClCb,QAAea,GAAhCqK,GADmD,iBAEpChI,EAAS,IAF2B,eAErD0E,EAFqD,KAE/CuD,EAF+C,KAGtDC,EAAmBpQ,GAAQ,kBAAMqQ,OAASH,EAAe,OAAM,CACnEA,IASF,MAAO,CAPUjI,GACf,SAACxF,GACC0N,EAAQ1N,EAAEkL,OAAOzD,OACjBkG,EAAiB3N,EAAEkL,OAAOzD,SAE5B,CAACkG,IAEexD,K,8CCpBpB,SAAgB,MAAQ","file":"proxies.e9b312dfe93094fab44d.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"_25Hedjekvk\",\"cnt\":\"_1tfU5GSa-_\",\"afterOpen\":\"_2VMuy-HWwC\"};","import cx from 'clsx';\nimport * as React from 'react';\nimport Modal from 'react-modal';\n\nimport modalStyle from '../Modal.module.css';\nimport s from './BaseModal.module.css';\n\nconst { useMemo } = React;\n\nexport default function BaseModal({ isOpen, onRequestClose, children }) {\n  const className = useMemo(\n    () => ({\n      base: cx(modalStyle.content, s.cnt),\n      afterOpen: s.afterOpen,\n      beforeClose: '',\n    }),\n    []\n  );\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      className={className}\n      overlayClassName={cx(modalStyle.overlay, s.overlay)}\n    >\n      {children}\n    </Modal>\n  );\n}\n","import * as React from 'react';\n\ntype Props = {\n  size?: number;\n  color?: string;\n};\n\nexport default function Equalizer({\n  color = 'currentColor',\n  size = 24,\n}: Props) {\n  return (\n    <svg\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={size}\n      height={size}\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M2 6h9M18.5 6H22\" />\n      <circle cx=\"16\" cy=\"6\" r=\"2\" />\n      <path d=\"M22 18h-9M6 18H2\" />\n      <circle r=\"2\" transform=\"matrix(-1 0 0 1 8 18)\" />\n    </svg>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"FlexCenter\":\"_1NNIVhRL-n\"};","import * as React from 'react';\n\nimport s from './Styled.module.css';\n\nexport function FlexCenter({ children }: { children: React.ReactNode }) {\n  return <div className={s.FlexCenter}>{children}</div>;\n}\n","import * as React from 'react';\n\nimport Button from '../Button';\nimport { FlexCenter } from '../shared/Styled';\n\nconst { useRef, useEffect } = React;\n\ntype Props = {\n  onClickPrimaryButton?: () => void;\n  onClickSecondaryButton?: () => void;\n};\n\nexport function ClosePrevConns({\n  onClickPrimaryButton,\n  onClickSecondaryButton,\n}: Props) {\n  const primaryButtonRef = useRef<HTMLButtonElement>(null);\n  const secondaryButtonRef = useRef<HTMLButtonElement>(null);\n  useEffect(() => {\n    primaryButtonRef.current.focus();\n  }, []);\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.keyCode === 39) {\n      secondaryButtonRef.current.focus();\n    } else if (e.keyCode === 37) {\n      primaryButtonRef.current.focus();\n    }\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n    <div onKeyDown={handleKeyDown}>\n      <h2>Close Connections?</h2>\n      <p>\n        Click \"Yes\" to close those connections that are still using the old\n        selected proxy in this group\n      </p>\n      <div style={{ height: 30 }} />\n      <FlexCenter>\n        <Button onClick={onClickPrimaryButton} ref={primaryButtonRef}>\n          Yes\n        </Button>\n        <div style={{ width: 20 }} />\n        <Button onClick={onClickSecondaryButton} ref={secondaryButtonRef}>\n          No\n        </Button>\n      </FlexCenter>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"topBar\":\"_2adLhYLrrV\",\"topBarRight\":\"_1gc_yljm7w\",\"textFilterContainer\":\"_1N0wXB7TV7\",\"group\":\"_35E6rdJlPT\",\"spining\":\"_3NWc4-pcFT\",\"spining_keyframes\":\"_2zZyX5N3wc\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"_2qbBB1Sojw\",\"arrow\":\"_1iuVspxe4f\",\"isOpen\":\"_2CN_S7POBQ\",\"btn\":\"_3504uhlYv5\",\"qty\":\"_3Vynmp3NK4\"};","import cx from 'clsx';\nimport * as React from 'react';\nimport { ChevronDown } from 'react-feather';\n\nimport Button from './Button';\nimport s from './CollapsibleSectionHeader.module.css';\nimport { SectionNameType } from './shared/Basic';\n\ntype Props = {\n  name: string;\n  type: string;\n  qty?: number;\n  toggle?: () => void;\n  isOpen?: boolean;\n};\n\nexport default function Header({ name, type, toggle, isOpen, qty }: Props) {\n  const handleKeyDown = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      e.preventDefault();\n      if (e.key === 'Enter' || e.key === ' ') {\n        toggle();\n      }\n    },\n    [toggle]\n  );\n  return (\n    <div\n      className={s.header}\n      onClick={toggle}\n      style={{ cursor: 'pointer' }}\n      tabIndex={0}\n      onKeyDown={handleKeyDown}\n      role=\"button\"\n    >\n      <div>\n        <SectionNameType name={name} type={type} />\n      </div>\n\n      {typeof qty === 'number' ? <span className={s.qty}>{qty}</span> : null}\n\n      <Button kind=\"minimal\" onClick={toggle} className={s.btn}>\n        <span className={cx(s.arrow, { [s.isOpen]: isOpen })}>\n          <ChevronDown size={20} />\n        </span>\n      </Button>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport {\n  // types\n  DelayMapping,\n  NonProxyTypes,\n  ProxiesMapping,\n  // atom\n  proxyFilterText,\n  ProxyItem,\n} from '../../store/proxies';\n\nconst { useMemo } = React;\n\nfunction filterAvailableProxies(list: string[], delay: DelayMapping) {\n  return list.filter((name) => {\n    const d = delay[name];\n    if (d === undefined) {\n      return true;\n    }\n    if (d.number === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  });\n}\n\nconst getSortDelay = (\n  d:\n    | undefined\n    | {\n        number?: number;\n      },\n  proxyInfo: ProxyItem\n) => {\n  if (d && typeof d.number === 'number' && d.number > 0) {\n    return d.number;\n  }\n\n  const type = proxyInfo && proxyInfo.type;\n  if (type && NonProxyTypes.indexOf(type) > -1) return -1;\n\n  return 999999;\n};\n\nconst ProxySortingFns = {\n  Natural: (proxies: string[]) => proxies,\n  LatencyAsc: (\n    proxies: string[],\n    delay: DelayMapping,\n    proxyMapping?: ProxiesMapping\n  ) => {\n    return proxies.sort((a, b) => {\n      const d1 = getSortDelay(delay[a], proxyMapping && proxyMapping[a]);\n      const d2 = getSortDelay(delay[b], proxyMapping && proxyMapping[b]);\n      return d1 - d2;\n    });\n  },\n  LatencyDesc: (\n    proxies: string[],\n    delay: DelayMapping,\n    proxyMapping?: ProxiesMapping\n  ) => {\n    return proxies.sort((a, b) => {\n      const d1 = getSortDelay(delay[a], proxyMapping && proxyMapping[a]);\n      const d2 = getSortDelay(delay[b], proxyMapping && proxyMapping[b]);\n      return d2 - d1;\n    });\n  },\n  NameAsc: (proxies: string[]) => {\n    return proxies.sort();\n  },\n  NameDesc: (proxies: string[]) => {\n    return proxies.sort((a, b) => {\n      if (a > b) return -1;\n      if (a < b) return 1;\n      return 0;\n    });\n  },\n};\n\nfunction filterStrArr(all: string[], searchText: string) {\n  const segments = searchText\n    .toLowerCase()\n    .split(' ')\n    .map((x) => x.trim())\n    .filter((x) => !!x);\n\n  if (segments.length === 0) return all;\n\n  return all.filter((name) => {\n    let i = 0;\n    for (; i < segments.length; i++) {\n      const seg = segments[i];\n      if (name.toLowerCase().indexOf(seg) > -1) return true;\n    }\n    return false;\n  });\n}\n\nfunction filterAvailableProxiesAndSort(\n  all: string[],\n  delay: DelayMapping,\n  hideUnavailableProxies: boolean,\n  filterText: string,\n  proxySortBy: string,\n  proxies?: ProxiesMapping\n) {\n  // all is freezed\n  let filtered = [...all];\n  if (hideUnavailableProxies) {\n    filtered = filterAvailableProxies(all, delay);\n  }\n\n  if (typeof filterText === 'string' && filterText !== '') {\n    filtered = filterStrArr(filtered, filterText);\n  }\n  return ProxySortingFns[proxySortBy](filtered, delay, proxies);\n}\n\nexport function useFilteredAndSorted(\n  all: string[],\n  delay: DelayMapping,\n  hideUnavailableProxies: boolean,\n  proxySortBy: string,\n  proxies?: ProxiesMapping\n) {\n  const [filterText] = useRecoilState(proxyFilterText);\n  return useMemo(\n    () =>\n      filterAvailableProxiesAndSort(\n        all,\n        delay,\n        hideUnavailableProxies,\n        filterText,\n        proxySortBy,\n        proxies\n      ),\n    [all, delay, hideUnavailableProxies, filterText, proxySortBy, proxies]\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"v5oNKUwcTc\",\"zapWrapper\":\"_2fR1H0ysyY\"};","export const keyCodes = {\n  Right: 39,\n  Left: 37,\n  Enter: 13,\n  Space: 32,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"proxy\":\"_5-kOJyYfSn\",\"now\":\"MbWebw2VH4\",\"error\":\"_2dlAYgAIKi\",\"selectable\":\"_3rB1UgDAL6\",\"proxyType\":\"nnjdzHZySt\",\"row\":\"_2E11-huRp7\",\"proxyName\":\"_2Eys6UMXCm\",\"proxySmall\":\"_2rRGWVNOYC\"};","// extracted by mini-css-extract-plugin\nexport default {\"proxyLatency\":\"_1GlyjMFCSf\"};","import * as React from 'react';\n\nimport s0 from './ProxyLatency.module.css';\n\ntype ProxyLatencyProps = {\n  number: number;\n  color: string;\n};\n\nexport function ProxyLatency({ number, color }: ProxyLatencyProps) {\n  return (\n    <span className={s0.proxyLatency} style={{ color }}>\n      <span>{number} ms</span>\n    </span>\n  );\n}\n","import cx from 'clsx';\nimport * as React from 'react';\nimport { keyCodes } from 'src/misc/keycode';\n\nimport { getDelay, getProxies, NonProxyTypes } from '../../store/proxies';\nimport { connect } from '../StateProvider';\nimport s0 from './Proxy.module.css';\nimport { ProxyLatency } from './ProxyLatency';\n\nconst { useMemo } = React;\n\nconst colorMap = {\n  // green\n  good: '#67c23a',\n  // yellow\n  normal: '#d4b75c',\n  // orange\n  bad: '#e67f3c',\n  // bad: '#F56C6C',\n  na: '#909399',\n};\n\nfunction getLabelColor({\n  number,\n}: {\n  number?: number;\n} = {}) {\n  if (number === 0) {\n    return colorMap.na;\n  } else if (number < 200) {\n    return colorMap.good;\n  } else if (number < 400) {\n    return colorMap.normal;\n  } else if (typeof number === 'number') {\n    return colorMap.bad;\n  }\n  return colorMap.na;\n}\n\nfunction getProxyDotBackgroundColor(\n  latency: {\n    number?: number;\n  },\n  proxyType: string\n) {\n  if (NonProxyTypes.indexOf(proxyType) > -1) {\n    return 'linear-gradient(135deg, white 15%, #999 15% 30%, white 30% 45%, #999 45% 60%, white 60% 75%, #999 75% 90%, white 90% 100%)';\n  }\n  return getLabelColor(latency);\n}\n\ntype ProxyProps = {\n  name: string;\n  now?: boolean;\n  proxy: any;\n  latency: any;\n  isSelectable?: boolean;\n  onClick?: (proxyName: string) => unknown;\n};\n\nfunction ProxySmallImpl({\n  now,\n  name,\n  proxy,\n  latency,\n  isSelectable,\n  onClick,\n}: ProxyProps) {\n  const color = useMemo(() => getProxyDotBackgroundColor(latency, proxy.type), [\n    latency,\n    proxy,\n  ]);\n  const title = useMemo(() => {\n    let ret = name;\n    if (latency && typeof latency.number === 'number') {\n      ret += ' ' + latency.number + ' ms';\n    }\n    return ret;\n  }, [name, latency]);\n\n  const doSelect = React.useCallback(() => {\n    isSelectable && onClick && onClick(name);\n  }, [name, onClick, isSelectable]);\n\n  const className = useMemo(() => {\n    return cx(s0.proxySmall, {\n      [s0.now]: now,\n      [s0.selectable]: isSelectable,\n    });\n  }, [isSelectable, now]);\n\n  const handleKeyDown = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.keyCode === keyCodes.Enter) {\n        doSelect();\n      }\n    },\n    [doSelect]\n  );\n\n  return (\n    <div\n      title={title}\n      className={className}\n      style={{ background: color }}\n      onClick={doSelect}\n      onKeyDown={handleKeyDown}\n      role={isSelectable ? 'menuitem' : ''}\n    />\n  );\n}\n\nfunction ProxyImpl({\n  now,\n  name,\n  proxy,\n  latency,\n  isSelectable,\n  onClick,\n}: ProxyProps) {\n  const color = useMemo(() => getLabelColor(latency), [latency]);\n  const doSelect = React.useCallback(() => {\n    isSelectable && onClick && onClick(name);\n  }, [name, onClick, isSelectable]);\n  const handleKeyDown = React.useCallback(\n    (e: React.KeyboardEvent) => {\n      if (e.keyCode === keyCodes.Enter) {\n        doSelect();\n      }\n    },\n    [doSelect]\n  );\n  const className = useMemo(() => {\n    return cx(s0.proxy, {\n      [s0.now]: now,\n      [s0.error]: latency && latency.error,\n      [s0.selectable]: isSelectable,\n    });\n  }, [isSelectable, now, latency]);\n\n  return (\n    <div\n      tabIndex={0}\n      className={className}\n      onClick={doSelect}\n      onKeyDown={handleKeyDown}\n      role={isSelectable ? 'menuitem' : ''}\n    >\n      <div className={s0.proxyName}>{name}</div>\n      <div className={s0.row}>\n        <span className={s0.proxyType} style={{ opacity: now ? 0.6 : 0.2 }}>\n          {proxy.type}\n        </span>\n        {latency && latency.number ? (\n          <ProxyLatency number={latency.number} color={color} />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nconst mapState = (s: any, { name }) => {\n  const proxies = getProxies(s);\n  const delay = getDelay(s);\n  return {\n    proxy: proxies[name],\n    latency: delay[name],\n  };\n};\n\nexport const Proxy = connect(mapState)(ProxyImpl);\nexport const ProxySmall = connect(mapState)(ProxySmallImpl);\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"_1pPZyUDtdp\",\"listSummaryView\":\"_6uXcWV1Myk\"};","import * as React from 'react';\n\nimport { Proxy, ProxySmall } from './Proxy';\nimport s from './ProxyList.module.css';\n\ntype ProxyListProps = {\n  all: string[];\n  now?: string;\n  isSelectable?: boolean;\n  itemOnTapCallback?: (x: string) => void;\n  show?: boolean;\n};\n\nexport function ProxyList({\n  all,\n  now,\n  isSelectable,\n  itemOnTapCallback,\n}: ProxyListProps) {\n  const proxies = all;\n\n  return (\n    <div className={s.list}>\n      {proxies.map((proxyName) => {\n        return (\n          <Proxy\n            key={proxyName}\n            onClick={itemOnTapCallback}\n            isSelectable={isSelectable}\n            name={proxyName}\n            now={proxyName === now}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport function ProxyListSummaryView({\n  all,\n  now,\n  isSelectable,\n  itemOnTapCallback,\n}: ProxyListProps) {\n  return (\n    <div className={s.listSummaryView}>\n      {all.map((proxyName) => {\n        return (\n          <ProxySmall\n            key={proxyName}\n            onClick={itemOnTapCallback}\n            isSelectable={isSelectable}\n            name={proxyName}\n            now={proxyName === now}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","/* import memoizeOne from 'memoize-one'; */\nimport * as React from 'react';\nimport { Zap } from 'react-feather';\n\nimport {\n  getCollapsibleIsOpen,\n  getHideUnavailableProxies,\n  getProxySortBy,\n} from '../../store/app';\nimport { getProxies, switchProxy } from '../../store/proxies';\nimport Button from '../Button';\nimport CollapsibleSectionHeader from '../CollapsibleSectionHeader';\nimport { connect, useStoreActions } from '../StateProvider';\nimport { useFilteredAndSorted } from './hooks';\nimport s0 from './ProxyGroup.module.css';\nimport { ProxyList, ProxyListSummaryView } from './ProxyList';\n\nconst { createElement, useCallback, useMemo, useState } = React;\n\nfunction ZapWrapper() {\n  return (\n    <div className={s0.zapWrapper}>\n      <Zap size={16} />\n    </div>\n  );\n}\n\nfunction ProxyGroupImpl({\n  name,\n  all: allItems,\n  delay,\n  hideUnavailableProxies,\n  proxySortBy,\n  proxies,\n  type,\n  now,\n  isOpen,\n  apiConfig,\n  dispatch,\n}) {\n  const all = useFilteredAndSorted(\n    allItems,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy,\n    proxies\n  );\n\n  const isSelectable = useMemo(() => type === 'Selector', [type]);\n\n  const {\n    app: { updateCollapsibleIsOpen },\n    proxies: { requestDelayForProxies },\n  } = useStoreActions();\n\n  const toggle = useCallback(() => {\n    updateCollapsibleIsOpen('proxyGroup', name, !isOpen);\n  }, [isOpen, updateCollapsibleIsOpen, name]);\n\n  const itemOnTapCallback = useCallback(\n    (proxyName) => {\n      if (!isSelectable) return;\n      dispatch(switchProxy(apiConfig, name, proxyName));\n    },\n    [apiConfig, dispatch, name, isSelectable]\n  );\n\n  const [isTestingLatency, setIsTestingLatency] = useState(false);\n  const testLatency = useCallback(async () => {\n    setIsTestingLatency(true);\n    try {\n      await requestDelayForProxies(apiConfig, all);\n    } catch (err) {}\n    setIsTestingLatency(false);\n  }, [all, apiConfig, requestDelayForProxies]);\n\n  return (\n    <div className={s0.group}>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <CollapsibleSectionHeader\n          name={name}\n          type={type}\n          toggle={toggle}\n          qty={all.length}\n          isOpen={isOpen}\n        />\n        <Button\n          kind=\"minimal\"\n          onClick={testLatency}\n          isLoading={isTestingLatency}\n        >\n          <ZapWrapper />\n        </Button>\n      </div>\n      {createElement(isOpen ? ProxyList : ProxyListSummaryView, {\n        all,\n        now,\n        isSelectable,\n        itemOnTapCallback,\n      })}\n    </div>\n  );\n}\n\nexport const ProxyGroup = connect((s, { name, delay }) => {\n  const proxies = getProxies(s);\n  const collapsibleIsOpen = getCollapsibleIsOpen(s);\n  const proxySortBy = getProxySortBy(s);\n  const hideUnavailableProxies = getHideUnavailableProxies(s);\n\n  const group = proxies[name];\n  const { all, type, now } = group;\n  return {\n    all,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy,\n    proxies,\n    type,\n    now,\n    isOpen: collapsibleIsOpen[`proxyGroup:${name}`],\n  };\n})(ProxyGroupImpl);\n","import React from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nimport { framerMotionResouce } from '../misc/motion';\n\nconst { memo, useState, useRef, useEffect } = React;\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => void (ref.current = value), [value]);\n  return ref.current;\n}\n\nfunction useMeasure() {\n  const ref = useRef();\n  const [bounds, set] = useState({ height: 0 });\n  useEffect(() => {\n    const ro = new ResizeObserver(([entry]) => set(entry.contentRect));\n    if (ref.current) ro.observe(ref.current);\n    return () => ro.disconnect();\n  }, []);\n  return [ref, bounds];\n}\n\nconst variantsCollpapsibleWrap = {\n  initialOpen: {\n    height: 'auto',\n    transition: { duration: 0 },\n  },\n  open: (height) => ({\n    height,\n    opacity: 1,\n    visibility: 'visible',\n    transition: { duration: 0.3 },\n  }),\n  closed: {\n    height: 0,\n    opacity: 0,\n    visibility: 'hidden',\n    transition: { duration: 0.3 },\n  },\n};\n\nconst variantsCollpapsibleChildContainer = {\n  open: {\n    x: 0,\n  },\n  closed: {\n    x: 20,\n  },\n};\n\nconst Collapsible = memo(({ children, isOpen }) => {\n  const module = framerMotionResouce.read();\n  const motion = module.motion;\n  const previous = usePrevious(isOpen);\n  const [refToMeature, { height }] = useMeasure();\n  return (\n    <div>\n      <motion.div\n        animate={\n          isOpen && previous === isOpen\n            ? 'initialOpen'\n            : isOpen\n            ? 'open'\n            : 'closed'\n        }\n        custom={height}\n        variants={variantsCollpapsibleWrap}\n      >\n        <motion.div\n          variants={variantsCollpapsibleChildContainer}\n          ref={refToMeature}\n        >\n          {children}\n        </motion.div>\n      </motion.div>\n    </div>\n  );\n});\n\nexport default Collapsible;\n","// extracted by mini-css-extract-plugin\nexport default {\"updatedAt\":\"_113att7Ifr\",\"body\":\"_26mH_RmGnl\",\"actionFooter\":\"_2cXcxGEUNI\",\"refresh\":\"_2NjdAt9CvG\"};","import { formatDistance } from 'date-fns';\nimport * as React from 'react';\nimport { RotateCw, Zap } from 'react-feather';\n\nimport { framerMotionResouce } from '../../misc/motion';\nimport {\n  getClashAPIConfig,\n  getCollapsibleIsOpen,\n  getHideUnavailableProxies,\n  getProxySortBy,\n} from '../../store/app';\nimport {\n  DelayMapping,\n  getDelay,\n  healthcheckProviderByName,\n  updateProviderByName,\n} from '../../store/proxies';\nimport Button from '../Button';\nimport Collapsible from '../Collapsible';\nimport CollapsibleSectionHeader from '../CollapsibleSectionHeader';\nimport { connect, useStoreActions } from '../StateProvider';\nimport { useFilteredAndSorted } from './hooks';\nimport { ProxyList, ProxyListSummaryView } from './ProxyList';\nimport s from './ProxyProvider.module.css';\n\nconst { useState, useCallback } = React;\n\ntype Props = {\n  name: string;\n  proxies: Array<string>;\n  delay: DelayMapping;\n  hideUnavailableProxies: boolean;\n  proxySortBy: string;\n  type: 'Proxy' | 'Rule';\n  vehicleType: 'HTTP' | 'File' | 'Compatible';\n  updatedAt?: string;\n  dispatch: (x: any) => Promise<any>;\n  isOpen: boolean;\n  apiConfig: any;\n};\n\nfunction ProxyProviderImpl({\n  name,\n  proxies: all,\n  delay,\n  hideUnavailableProxies,\n  proxySortBy,\n  vehicleType,\n  updatedAt,\n  isOpen,\n  dispatch,\n  apiConfig,\n}: Props) {\n  const proxies = useFilteredAndSorted(\n    all,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy\n  );\n  const [isHealthcheckLoading, setIsHealthcheckLoading] = useState(false);\n  const updateProvider = useCallback(\n    () => dispatch(updateProviderByName(apiConfig, name)),\n    [apiConfig, dispatch, name]\n  );\n  const healthcheckProvider = useCallback(async () => {\n    setIsHealthcheckLoading(true);\n    await dispatch(healthcheckProviderByName(apiConfig, name));\n    setIsHealthcheckLoading(false);\n  }, [apiConfig, dispatch, name, setIsHealthcheckLoading]);\n\n  const {\n    app: { updateCollapsibleIsOpen },\n  } = useStoreActions();\n\n  const toggle = useCallback(() => {\n    updateCollapsibleIsOpen('proxyProvider', name, !isOpen);\n  }, [isOpen, updateCollapsibleIsOpen, name]);\n\n  const timeAgo = formatDistance(new Date(updatedAt), new Date());\n  return (\n    <div className={s.body}>\n      <CollapsibleSectionHeader\n        name={name}\n        toggle={toggle}\n        type={vehicleType}\n        isOpen={isOpen}\n        qty={proxies.length}\n      />\n      <div className={s.updatedAt}>\n        <small>Updated {timeAgo} ago</small>\n      </div>\n      <Collapsible isOpen={isOpen}>\n        <ProxyList all={proxies} />\n        <div className={s.actionFooter}>\n          <Button text=\"Update\" start={<Refresh />} onClick={updateProvider} />\n          <Button\n            text=\"Health Check\"\n            start={<Zap size={16} />}\n            onClick={healthcheckProvider}\n            isLoading={isHealthcheckLoading}\n          />\n        </div>\n      </Collapsible>\n      <Collapsible isOpen={!isOpen}>\n        <ProxyListSummaryView all={proxies} />\n      </Collapsible>\n    </div>\n  );\n}\n\nconst button = {\n  rest: { scale: 1 },\n  pressed: { scale: 0.95 },\n};\nconst arrow = {\n  rest: { rotate: 0 },\n  hover: { rotate: 360, transition: { duration: 0.3 } },\n};\nfunction Refresh() {\n  const module = framerMotionResouce.read();\n  const motion = module.motion;\n  return (\n    <motion.div\n      className={s.refresh}\n      variants={button}\n      initial=\"rest\"\n      whileHover=\"hover\"\n      whileTap=\"pressed\"\n    >\n      <motion.div className=\"flexCenter\" variants={arrow}>\n        <RotateCw size={16} />\n      </motion.div>\n    </motion.div>\n  );\n}\n\nconst mapState = (s, { proxies, name }) => {\n  const hideUnavailableProxies = getHideUnavailableProxies(s);\n  const delay = getDelay(s);\n  const collapsibleIsOpen = getCollapsibleIsOpen(s);\n  const apiConfig = getClashAPIConfig(s);\n\n  const proxySortBy = getProxySortBy(s);\n\n  return {\n    apiConfig,\n    proxies,\n    delay,\n    hideUnavailableProxies,\n    proxySortBy,\n    isOpen: collapsibleIsOpen[`proxyProvider:${name}`],\n  };\n};\n\nexport const ProxyProvider = connect(mapState)(ProxyProviderImpl);\n","import * as React from 'react';\n\nimport ContentHeader from '../ContentHeader';\nimport { ProxyProvider } from './ProxyProvider';\n\nexport function ProxyProviderList({ items }) {\n  if (items.length === 0) return null;\n\n  return (\n    <>\n      <ContentHeader title=\"Proxy Provider\" />\n      <div>\n        {items.map((item) => (\n          <ProxyProvider\n            key={item.name}\n            name={item.name}\n            proxies={item.proxies}\n            type={item.type}\n            vehicleType={item.vehicleType}\n            updatedAt={item.updatedAt}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"_2epoA7G8CQ\"};","import * as React from 'react';\n\nimport s from './Select.module.css';\n\ntype Props = {\n  options: Array<string[]>;\n  selected: string;\n  onChange: (event: React.ChangeEvent<HTMLSelectElement>) => any;\n};\n\nexport default function Select({ options, selected, onChange }: Props) {\n  return (\n    // eslint-disable-next-line jsx-a11y/no-onchange\n    <select className={s.select} value={selected} onChange={onChange}>\n      {options.map(([value, name]) => (\n        <option key={value} value={value}>\n          {name}\n        </option>\n      ))}\n    </select>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"labeledInput\":\"_1tkxMBL44k\"};","import * as React from 'react';\n\nimport {\n  getAutoCloseOldConns,\n  getHideUnavailableProxies,\n  getProxySortBy,\n} from '../../store/app';\nimport Select from '../shared/Select';\nimport { connect, useStoreActions } from '../StateProvider';\nimport Switch from '../SwitchThemed';\nimport s from './Settings.module.css';\n\nconst options = [\n  ['Natural', 'Original order in config file'],\n  ['LatencyAsc', 'By latency from small to big'],\n  ['LatencyDesc', 'By latency from big to small'],\n  ['NameAsc', 'By name alphabetically (A-Z)'],\n  ['NameDesc', 'By name alphabetically (Z-A)'],\n];\n\nconst { useCallback } = React;\n\nfunction Settings({ appConfig }) {\n  const {\n    app: { updateAppConfig },\n  } = useStoreActions();\n\n  const handleProxySortByOnChange = useCallback(\n    (e) => {\n      updateAppConfig('proxySortBy', e.target.value);\n    },\n    [updateAppConfig]\n  );\n\n  const handleHideUnavailablesSwitchOnChange = useCallback(\n    (v) => {\n      updateAppConfig('hideUnavailableProxies', v);\n    },\n    [updateAppConfig]\n  );\n  return (\n    <>\n      <div className={s.labeledInput}>\n        <span>Sorting in group</span>\n        <div>\n          <Select\n            options={options}\n            selected={appConfig.proxySortBy}\n            onChange={handleProxySortByOnChange}\n          />\n        </div>\n      </div>\n      <hr />\n      <div className={s.labeledInput}>\n        <span>Hide unavailable proxies</span>\n        <div>\n          <Switch\n            name=\"hideUnavailableProxies\"\n            checked={appConfig.hideUnavailableProxies}\n            onChange={handleHideUnavailablesSwitchOnChange}\n          />\n        </div>\n      </div>\n      <div className={s.labeledInput}>\n        <span>Automatically close old connections</span>\n        <div>\n          <Switch\n            name=\"autoCloseOldConns\"\n            checked={appConfig.autoCloseOldConns}\n            onChange={(v) => updateAppConfig('autoCloseOldConns', v)}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst mapState = (s) => {\n  const proxySortBy = getProxySortBy(s);\n  const hideUnavailableProxies = getHideUnavailableProxies(s);\n  const autoCloseOldConns = getAutoCloseOldConns(s);\n\n  return {\n    appConfig: {\n      proxySortBy,\n      hideUnavailableProxies,\n      autoCloseOldConns,\n    },\n  };\n};\nexport default connect(mapState)(Settings);\n","import * as React from 'react';\nimport { useTextInut } from 'src/hooks/useTextInput';\n\nimport { proxyFilterText } from '../../store/proxies';\nimport shared from '../shared.module.css';\n\nexport function TextFilter() {\n  const [onChange, text] = useTextInut(proxyFilterText);\n  return (\n    <input\n      className={shared.input}\n      type=\"text\"\n      value={text}\n      onChange={onChange}\n    />\n  );\n}\n","import * as React from 'react';\nimport { Zap } from 'react-feather';\n\nimport { getClashAPIConfig } from '../../store/app';\nimport {\n  fetchProxies,\n  getDelay,\n  getProxyGroupNames,\n  getProxyProviders,\n  getShowModalClosePrevConns,\n  requestDelayAll,\n} from '../../store/proxies';\nimport Button from '../Button';\nimport ContentHeader from '../ContentHeader';\nimport BaseModal from '../shared/BaseModal';\nimport { Fab, position as fabPosition } from '../shared/Fab';\nimport { connect, useStoreActions } from '../StateProvider';\nimport Equalizer from '../svg/Equalizer';\nimport { ClosePrevConns } from './ClosePrevConns';\nimport s0 from './Proxies.module.css';\nimport { ProxyGroup } from './ProxyGroup';\nimport { ProxyProviderList } from './ProxyProviderList';\nimport Settings from './Settings';\nimport { TextFilter } from './TextFilter';\n\nconst { useState, useEffect, useCallback, useRef } = React;\n\nfunction Proxies({\n  dispatch,\n  groupNames,\n  delay,\n  proxyProviders,\n  apiConfig,\n  showModalClosePrevConns,\n}) {\n  const refFetchedTimestamp = useRef<{ startAt?: number; completeAt?: number }>(\n    {}\n  );\n  const [isTestingLatency, setIsTestingLatency] = useState(false);\n  const requestDelayAllFn = useCallback(() => {\n    if (isTestingLatency) return;\n\n    setIsTestingLatency(true);\n    dispatch(requestDelayAll(apiConfig)).then(\n      () => setIsTestingLatency(false),\n      () => setIsTestingLatency(false)\n    );\n  }, [apiConfig, dispatch, isTestingLatency]);\n\n  const fetchProxiesHooked = useCallback(() => {\n    refFetchedTimestamp.current.startAt = Date.now();\n    dispatch(fetchProxies(apiConfig)).then(() => {\n      refFetchedTimestamp.current.completeAt = Date.now();\n    });\n  }, [apiConfig, dispatch]);\n  useEffect(() => {\n    // fetch it now\n    fetchProxiesHooked();\n\n    // arm a window on focus listener to refresh it\n    const fn = () => {\n      if (\n        refFetchedTimestamp.current.startAt &&\n        Date.now() - refFetchedTimestamp.current.startAt > 3e4 // 30s\n      ) {\n        fetchProxiesHooked();\n      }\n    };\n    window.addEventListener('focus', fn, false);\n    return () => window.removeEventListener('focus', fn, false);\n  }, [fetchProxiesHooked]);\n\n  const [isSettingsModalOpen, setIsSettingsModalOpen] = useState(false);\n  const closeSettingsModal = useCallback(() => {\n    setIsSettingsModalOpen(false);\n  }, []);\n\n  const {\n    proxies: { closeModalClosePrevConns, closePrevConnsAndTheModal },\n  } = useStoreActions();\n\n  return (\n    <>\n      <BaseModal\n        isOpen={isSettingsModalOpen}\n        onRequestClose={closeSettingsModal}\n      >\n        <Settings />\n      </BaseModal>\n      <div className={s0.topBar}>\n        <ContentHeader title=\"Proxies\" />\n        <div className={s0.topBarRight}>\n          <div className={s0.textFilterContainer}>\n            <TextFilter />\n          </div>\n          <Button kind=\"minimal\" onClick={() => setIsSettingsModalOpen(true)}>\n            <Equalizer size={16} />\n          </Button>\n        </div>\n      </div>\n      <div>\n        {groupNames.map((groupName: string) => {\n          return (\n            <div className={s0.group} key={groupName}>\n              <ProxyGroup\n                name={groupName}\n                delay={delay}\n                apiConfig={apiConfig}\n                dispatch={dispatch}\n              />\n            </div>\n          );\n        })}\n      </div>\n      <ProxyProviderList items={proxyProviders} />\n      <div style={{ height: 60 }} />\n      <Fab\n        icon={isTestingLatency ? <ColorZap /> : <Zap width={16} height={16} />}\n        onClick={requestDelayAllFn}\n        text=\"Test Latency\"\n        position={fabPosition}\n      />\n      <BaseModal\n        isOpen={showModalClosePrevConns}\n        onRequestClose={closeModalClosePrevConns}\n      >\n        <ClosePrevConns\n          onClickPrimaryButton={() => closePrevConnsAndTheModal(apiConfig)}\n          onClickSecondaryButton={closeModalClosePrevConns}\n        />\n      </BaseModal>\n    </>\n  );\n}\n\nfunction ColorZap() {\n  return (\n    <div\n      className={s0.spining}\n      style={{\n        width: 48,\n        height: 48,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <Zap width={16} height={16} />\n    </div>\n  );\n}\n\nconst mapState = (s) => ({\n  apiConfig: getClashAPIConfig(s),\n  groupNames: getProxyGroupNames(s),\n  proxyProviders: getProxyProviders(s),\n  delay: getDelay(s),\n  showModalClosePrevConns: getShowModalClosePrevConns(s),\n});\n\nexport default connect(mapState)(Proxies);\n","import './rtf.css';\n\nimport { Action,Fab } from 'react-tiny-fab';\n\nexport const position = {\n  right: 10,\n  bottom: 10,\n};\n\nexport { Fab, Action };\n","import debounce from 'lodash-es/debounce';\nimport * as React from 'react';\nimport { RecoilState, useRecoilState } from 'recoil';\n\nconst { useCallback, useState, useMemo } = React;\n\nexport function useTextInut(\n  x: RecoilState<string>\n): [(e: React.ChangeEvent<HTMLInputElement>) => void, string] {\n  const [, setTextGlobal] = useRecoilState(x);\n  const [text, setText] = useState('');\n  const setTextDebounced = useMemo(() => debounce(setTextGlobal, 300), [\n    setTextGlobal,\n  ]);\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setText(e.target.value);\n      setTextDebounced(e.target.value);\n    },\n    [setTextDebounced]\n  );\n  return [onChange, text];\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"_1I0EXOg8Vu\"};"],"sourceRoot":""}