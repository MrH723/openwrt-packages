--- a/luci-app-turboacc/root/etc/init.d/turboacc
+++ b/luci-app-turboacc/root/etc/init.d/turboacc
@@ -232,27 +232,6 @@ start(){
 		sysctl -w net.ipv4.tcp_congestion_control="bbr"
 	else
 		sysctl -w net.ipv4.tcp_congestion_control="cubic"
-	fi	
-
-	[ "${dns_acc}" -eq "1" ] && {
-	mkdir -p "/tmp/dnsmasq.d"
-	wget-ssl -q -t "20" -T "5" "https://cdn.jsdelivr.net/gh/googlehosts/hosts@master/hosts-files/dnsmasq.conf" -O "/tmp/dnsmasq.d/dnsmasq-googlehosts.conf" &
-}
-
-	if [ "${dns_caching}" -eq "1" ];  then
-		stop_dnscache
-		sleep 1
-		rm -f "/var/log/dnscache.file"
-		if [ "${dns_caching_mode}" = "1" ];  then
-			start_pdnsd
-		elif [ "${dns_caching_mode}" = "2" ];  then
-			start_dnsforwarder
-		fi
-		change_dns
-		nohup "/usr/share/dnscache/dnscache-while.sh" > "/var/log/dnscache.file" 2>&1 &
-	else
-		stop_dnscache
-		revert_dns
 	fi
 
 	if [ "${restart_utils}" = "true" ]; then
@@ -275,11 +254,6 @@ stop(){
 		rmmod "fast_classifier" 2>"/dev/null"
 }
 
-	[ "${dns_acc}" -eq "0" ] && rm -f "/tmp/dnsmasq.d/dnsmasq-googlehosts.conf"
-
-	stop_dnscache
-	revert_dns
-
 	if [ "${restart_utils}" = "true" ]; then
 		/etc/init.d/dnsmasq restart >/dev/null 2>&1 && echo "DNSMASQ revert"
 		/etc/init.d/firewall restart >/dev/null 2>&1

--- a/luci-app-turboacc/luasrc/model/cbi/turboacc.lua
+++ b/luci-app-turboacc/luasrc/model/cbi/turboacc.lua
@@ -59,33 +59,4 @@ fullcone_nat.rmempty = false
 fullcone_nat.description = translate("Using FullCone NAT can improve gaming performance effectively")
 end 
 
-dns_acc = s:option(Flag, "dns_acc", translate("DNS Acceleration"))
-dns_acc.default = 0
-dns_acc.rmempty = false
-dns_acc.description = translate("Using optimized DNS records for GoogleHosts (Don't use under Clash Fake-IP mode)")
-
-dns_caching = s:option(Flag, "dns_caching", translate("DNS Caching"))
-dns_caching.default = 0
-dns_caching.rmempty = false
-dns_caching.description = translate("Enable DNS Caching and anti ISP DNS pollution")
-
-dns_caching_mode = s:option(ListValue, "dns_caching_mode", translate("Resolve DNS Mode"), translate("Only PDNSD and DNSForwarder is supported now"))
-dns_caching_mode:value("1", translate("Using PDNSD to query and cache"))
-if nixio.fs.access("/usr/bin/dnsforwarder") then
-dns_caching_mode:value("2", translate("Using DNSForwarder to query and cache"))
-end
-dns_caching_mode.default = 1
-dns_caching_mode:depends("dns_caching", 1)
-
-dns_caching_v4_dns = s:option(Value, "dns_caching_v4_dns", translate("Upsteam IPv4 DNS Server"))
-dns_caching_v4_dns.default = "114.114.114.114,114.114.115.115,223.5.5.5,223.6.6.6,180.76.76.76,119.29.29.29,119.28.28.28,1.2.4.8,210.2.4.8"
-dns_caching_v4_dns.description = translate("Muitiple IPv4 DNS server can saperate with ','")
-dns_caching_v4_dns:depends("dns_caching_mode", 1)
-dns_caching_v4_dns:depends("dns_caching_mode", 2)
-
-dns_caching_v6_dns = s:option(Value, "dns_caching_v6_dns", translate("Upsteam IPv6 DNS Server"))
-dns_caching_v6_dns.default = "2001:4860:4860::8888,2001:4860:4860::8844,2001:2001::1111,2001:2001::1001,2400:da00::6666,240C::6666,240C::6644"
-dns_caching_v6_dns.description = translate("Muitiple IPv6 DNS server can saperate with ','")
-dns_caching_v6_dns:depends("dns_caching_mode", 2)
-
 return m

--- a/luci-app-turboacc/Makefile
+++ b/luci-app-turboacc/Makefile
@@ -12,11 +12,9 @@ PKG_RELEASE:=1
 PKG_LICENSE:=GPLv3.0+
 
 LUCI_TITLE:=LuCI support for Flow Offload / Shortcut-FE
-LUCI_DEPENDS:=+pdnsd-alt \
-              +PACKAGE_$(PKG_NAME)_INCLUDE_shortcut-fe:kmod-fast-classifier \
+LUCI_DEPENDS:=+PACKAGE_$(PKG_NAME)_INCLUDE_shortcut-fe:kmod-fast-classifier \
               +PACKAGE_$(PKG_NAME)_INCLUDE_flow-offload:kmod-ipt-offload \
-              +PACKAGE_$(PKG_NAME)_INCLUDE_bbr-cca:kmod-tcp-bbr \
-              +PACKAGE_$(PKG_NAME)_INCLUDE_dnsforwarder:dnsforwarder
+              +PACKAGE_$(PKG_NAME)_INCLUDE_bbr-cca:kmod-tcp-bbr
 LUCI_PKGARCH:=all
 
 define Package/$(PKG_NAME)/config
@@ -32,17 +30,12 @@ config PACKAGE_$(PKG_NAME)_INCLUDE_shortcut-fe
 config PACKAGE_$(PKG_NAME)_INCLUDE_bbr-cca
 	bool "Include BBR CCA"
 	default y
-
-config PACKAGE_$(PKG_NAME)_INCLUDE_dnsforwarder
-	bool "Include DNSForwarder"
-	default n
 endef
 
 PKG_CONFIG_DEPENDS:= \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_shortcut-fe \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_flow-offload \
-	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_bbr-cca \
-	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_dnsforwarder
+	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_bbr-cca
 
 include $(TOPDIR)/feeds/luci/luci.mk
 

--- a/luci-app-turboacc/luasrc/view/turboacc/status.htm
+++ b/luci-app-turboacc/luasrc/view/turboacc/status.htm
@@ -4,7 +4,6 @@
 		<tr><td width="33%"><%:Flow Offloading%></td><td id="_fastpath_state"><em><%:Collecting data...%></em></td></tr>
 		<tr><td width="33%"><%:BBR CCA%></td><td id="_bbr_state"><em><%:Collecting data...%></em></td></tr>
 		<tr><td width="33%"><%:FullCone NAT%></td><td id="_fullconenat_state"><em><%:Collecting data...%></em></td></tr>
-		<tr><td width="33%"><%:DNS Caching%></td><td id="_dnscaching_state"><em><%:Collecting data...%></em></td></tr>
 	</table>
 </fieldset>
 
@@ -12,13 +11,11 @@
 	var fastpath_state = document.getElementById('_fastpath_state');
 	var bbr_state = document.getElementById('_bbr_state');
 	var fullconenat_state = document.getElementById('_fullconenat_state');
-	var dnscaching_state = document.getElementById('_dnscaching_state');
 	XHR.poll(5, '<%=luci.dispatcher.build_url("admin", "network", "turboacc", "status")%>', null, function(x, status) {
 		if ( x && x.status == 200 ) {
 			fastpath_state.innerHTML = status.fastpath_state ? '<em><b><font color=green><%:RUNNING%></font></b></em>' : '<em><b><font color=red><%:NOT RUNNING%></font></b></em>';
 			bbr_state.innerHTML = status.bbr_state ? '<em><b><font color=green><%:RUNNING%></font></b></em>' : '<em><b><font color=red><%:NOT RUNNING%></font></b></em>';
 			fullconenat_state.innerHTML = status.fullconenat_state ? '<em><b><font color=green><%:RUNNING%></font></b></em>' : '<em><b><font color=red><%:NOT RUNNING%></font></b></em>';
-			dnscaching_state.innerHTML = status.dnscaching_state ? '<em><b><font color=green><%:RUNNING%></font></b></em>' : '<em><b><font color=red><%:NOT RUNNING%></font></b></em>';
 		}
 	});
 //]]>